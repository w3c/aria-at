// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`V1 test format version creates build files for v1 test (banner) 1`] = `
"{
  "navigate forwards into a banner landmark": {
    "reading": {
      "jaws": [
        [ "R" ],
        [ "DOWN" ],
        [ "TAB" ],
        [ "U" ]
      ],
      "nvda": [
        [ "D" ],
        [ "DOWN" ],
        [ "TAB" ],
        [ "U" ],
        [ "K" ]
      ]
    },
    "interaction": {
      "jaws": [ [ "TAB" ] ],
      "nvda": [ [ "TAB" ] ],
      "voiceover_macos": [
        [
          "CTRL_OPT_RIGHT,CTRL_OPT_RIGHT"
        ],
        [ "CTRL_OPT_CMD_L" ]
      ]
    }
  },
  "navigate backwards into a banner landmark": {
    "reading": {
      "jaws": [
        [ "UP" ],
        [ "SHIFT_TAB" ],
        [ "SHIFT_U" ]
      ],
      "nvda": [
        [ "UP" ],
        [ "SHIFT_TAB" ],
        [ "SHIFT_U" ],
        [ "SHIFT_K" ]
      ]
    },
    "interaction": {
      "jaws": [ [ "SHIFT_TAB" ] ],
      "nvda": [ [ "SHIFT_TAB" ] ],
      "voiceover_macos": [
        [
          "CTRL_OPT_LEFT,CTRL_OPT_LEFT"
        ],
        [ "SHIFT_CTRL_OPT_CMD_L" ]
      ]
    }
  },
  "navigate forwards out of a banner landmark": {
    "reading": {
      "jaws": [ [ "DOWN" ], [ "U" ] ],
      "nvda": [ [ "DOWN" ], [ "U" ], [ "K" ] ]
    },
    "interaction": {
      "jaws": [ [ "TAB" ] ],
      "nvda": [ [ "TAB" ] ],
      "voiceover_macos": [
        [
          "CTRL_OPT_RIGHT,CTRL_OPT_RIGHT"
        ],
        [ "CTRL_OPT_CMD_L" ]
      ]
    }
  },
  "navigate backwards out of a banner landmark": {
    "reading": {
      "jaws": [ [ "UP" ], [ "SHIFT_U" ] ],
      "nvda": [
        [ "UP" ],
        [ "SHIFT_K" ],
        [ "SHIFT_U" ]
      ]
    },
    "interaction": {
      "jaws": [ [ "SHIFT_TAB" ] ],
      "nvda": [ [ "SHIFT_TAB" ] ],
      "voiceover_macos": [
        [
          "CTRL_OPT_LEFT,CTRL_OPT_LEFT"
        ],
        [ "SHIFT_CTRL_OPT_CMD_L" ]
      ]
    }
  },
  "navigate forwards to a button inside a banner landmark": {
    "reading": {
      "jaws": [
        [ "B" ],
        [ "DOWN" ],
        [ "TAB" ]
      ],
      "nvda": [
        [ "B" ],
        [ "DOWN" ],
        [ "TAB" ]
      ]
    },
    "interaction": {
      "jaws": [ [ "TAB" ] ],
      "nvda": [ [ "TAB" ] ],
      "voiceover_macos": [
        [
          "CTRL_OPT_RIGHT,CTRL_OPT_RIGHT"
        ],
        [ "CTRL_OPT_CMD_J" ],
        [ "TAB" ]
      ]
    }
  },
  "navigate backwards to a button inside a banner landmark": {
    "reading": {
      "jaws": [
        [ "UP" ],
        [ "SHIFT_B" ],
        [ "SHIFT_TAB" ]
      ],
      "nvda": [
        [ "UP" ],
        [ "SHIFT_B" ],
        [ "SHIFT_TAB" ]
      ]
    },
    "interaction": {
      "jaws": [ [ "SHIFT_TAB" ] ],
      "nvda": [ [ "SHIFT_TAB" ] ],
      "voiceover_macos": [
        [
          "CTRL_OPT_LEFT,CTRL_OPT_LEFT"
        ],
        [ "SHIFT_CTRL_OPT_CMD_J" ],
        [ "SHIFT_TAB" ]
      ]
    }
  },
  "navigate forwards to an image inside a banner landmark": {
    "reading": {
      "jaws": [ [ "G" ] ],
      "nvda": [ [ "G" ] ]
    },
    "interaction": {
      "voiceover_macos": [ [ "CTRL_OPT_CMD_G" ] ]
    }
  },
  "navigate backwards to an image inside a banner landmark": {
    "reading": {
      "jaws": [ [ "SHIFT_G" ] ],
      "nvda": [ [ "SHIFT_G" ] ]
    },
    "interaction": {
      "voiceover_macos": [ [ "SHIFT_CTRL_OPT_CMD_G" ] ]
    }
  },
  "navigate forwards to a heading inside a banner landmark": {
    "reading": {
      "jaws": [ [ "H" ], [ "ONE" ] ],
      "nvda": [ [ "H" ], [ "ONE" ] ]
    },
    "interaction": {
      "voiceover_macos": [ [ "CTRL_OPT_CMD_H" ] ]
    }
  },
  "navigate backwards to a heading inside a banner landmark": {
    "reading": {
      "jaws": [
        [ "SHIFT_H" ],
        [ "SHIFT_ONE" ]
      ],
      "nvda": [
        [ "SHIFT_H" ],
        [ "SHIFT_ONE" ]
      ]
    },
    "interaction": {
      "voiceover_macos": [ [ "SHIFT_CTRL_OPT_CMD_H" ] ]
    }
  }
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 2`] = `
"
<!DOCTYPE html>
<meta charset="utf-8">
<head>
  <title>Index of Assistive Technology Test Files</title>
  <style>
    table {
      display: table;
      border-collapse: collapse;
      border-spacing: 2px;
      border-color: gray;
    }

    thead {
      display: table-row-group;
      vertical-align: middle;
      border-bottom: black solid 2px;
    }

    tbody {
      display: table-row-group;
      vertical-align: middle;
      border-color: gray;
    }

    tr:nth-child(even) {background: #DDD}
    tr:nth-child(odd) {background: #FFF}

    tr {
      display: table-row;
      vertical-align: inherit;
      border-color: gray;
    }

    td {
      padding: 3px;
      display: table-cell;
    }

    td.test {
      text-align: center;
    }

    td.none {
      color: #333;
    }

    th {
      padding: 3px;
      font-weight: bold;
      display: table-cell;
    }
  </style>
</head>
<body>
 <main>
  <h1>Index of Assistive Technology Test Files</h1>
  <p>This is useful for viewing the local files on a local web server.</p>
  <table>
    <thead>
      <tr>
        <th>Task ID</th>
        <th>Testing Task</th>
        <th>JAWS</th>
<th>NVDA</th>
<th>VoiceOver for macOS</th>

        <th>Setup Script Reference</th>
      </tr>
    </thead>
    <tbody>
<tr><td>1</td><td scope="row">Navigate forwards into a banner landmark in reading mode</td><td class="test"><a href="test-01-navigate-forwards-into-a-banner-landmark-reading.html?at=jaws" aria-label="JAWS test for task 1">JAWS</a></td><td class="test"><a href="test-01-navigate-forwards-into-a-banner-landmark-reading.html?at=nvda" aria-label="NVDA test for task 1">NVDA</a></td><td class="test none">not included</td><td>setFocusBeforeBanner</td></tr>
<tr><td>2</td><td scope="row">Navigate forwards into a banner landmark in interaction mode</td><td class="test"><a href="test-02-navigate-forwards-into-a-banner-landmark-interaction.html?at=jaws" aria-label="JAWS test for task 2">JAWS</a></td><td class="test"><a href="test-02-navigate-forwards-into-a-banner-landmark-interaction.html?at=nvda" aria-label="NVDA test for task 2">NVDA</a></td><td class="test none">not included</td><td>setFocusBeforeBanner</td></tr>
<tr><td>3</td><td scope="row">Navigate forwards into a banner landmark</td><td class="test none">not included</td><td class="test none">not included</td><td class="test"><a href="test-03-navigate-forwards-into-a-banner-landmark-interaction.html?at=voiceover_macos" aria-label="VoiceOver for macOS test for task 3">VoiceOver for macOS</a></td><td>setFocusBeforeBanner</td></tr>
<tr><td>4</td><td scope="row">Navigate backwards into a banner landmark in reading mode</td><td class="test"><a href="test-04-navigate-backwards-into-a-banner-landmark-reading.html?at=jaws" aria-label="JAWS test for task 4">JAWS</a></td><td class="test"><a href="test-04-navigate-backwards-into-a-banner-landmark-reading.html?at=nvda" aria-label="NVDA test for task 4">NVDA</a></td><td class="test none">not included</td><td>setFocusAfterBanner</td></tr>
<tr><td>5</td><td scope="row">Navigate backwards into a banner landmark in interaction mode</td><td class="test"><a href="test-05-navigate-backwards-into-a-banner-landmark-interaction.html?at=jaws" aria-label="JAWS test for task 5">JAWS</a></td><td class="test"><a href="test-05-navigate-backwards-into-a-banner-landmark-interaction.html?at=nvda" aria-label="NVDA test for task 5">NVDA</a></td><td class="test none">not included</td><td>setFocusAfterBanner</td></tr>
<tr><td>6</td><td scope="row">Navigate backwards into a banner landmark</td><td class="test none">not included</td><td class="test none">not included</td><td class="test"><a href="test-06-navigate-backwards-into-a-banner-landmark-interaction.html?at=voiceover_macos" aria-label="VoiceOver for macOS test for task 6">VoiceOver for macOS</a></td><td>setFocusAfterBanner</td></tr>
<tr><td>7</td><td scope="row">Navigate forwards out of a banner landmark in reading mode</td><td class="test"><a href="test-07-navigate-forwards-out-of-a-banner-landmark-reading.html?at=jaws" aria-label="JAWS test for task 7">JAWS</a></td><td class="test"><a href="test-07-navigate-forwards-out-of-a-banner-landmark-reading.html?at=nvda" aria-label="NVDA test for task 7">NVDA</a></td><td class="test none">not included</td><td>setFocusOnBottomLink</td></tr>
<tr><td>8</td><td scope="row">Navigate forwards out of a banner landmark in interaction mode</td><td class="test"><a href="test-08-navigate-forwards-out-of-a-banner-landmark-interaction.html?at=jaws" aria-label="JAWS test for task 8">JAWS</a></td><td class="test"><a href="test-08-navigate-forwards-out-of-a-banner-landmark-interaction.html?at=nvda" aria-label="NVDA test for task 8">NVDA</a></td><td class="test none">not included</td><td>setFocusOnBottomLink</td></tr>
<tr><td>9</td><td scope="row">Navigate forwards out of a banner landmark</td><td class="test none">not included</td><td class="test none">not included</td><td class="test"><a href="test-09-navigate-forwards-out-of-a-banner-landmark-interaction.html?at=voiceover_macos" aria-label="VoiceOver for macOS test for task 9">VoiceOver for macOS</a></td><td>setFocusOnBottomLink</td></tr>
<tr><td>10</td><td scope="row">Navigate backwards out of a banner landmark in reading mode</td><td class="test"><a href="test-10-navigate-backwards-out-of-a-banner-landmark-reading.html?at=jaws" aria-label="JAWS test for task 10">JAWS</a></td><td class="test"><a href="test-10-navigate-backwards-out-of-a-banner-landmark-reading.html?at=nvda" aria-label="NVDA test for task 10">NVDA</a></td><td class="test none">not included</td><td>setFocusOnTopLink</td></tr>
<tr><td>11</td><td scope="row">Navigate backwards out of a banner landmark in interaction mode</td><td class="test"><a href="test-11-navigate-backwards-out-of-a-banner-landmark-interaction.html?at=jaws" aria-label="JAWS test for task 11">JAWS</a></td><td class="test"><a href="test-11-navigate-backwards-out-of-a-banner-landmark-interaction.html?at=nvda" aria-label="NVDA test for task 11">NVDA</a></td><td class="test none">not included</td><td>setFocusOnTopLink</td></tr>
<tr><td>12</td><td scope="row">Navigate backwards out of a banner landmark</td><td class="test none">not included</td><td class="test none">not included</td><td class="test"><a href="test-12-navigate-backwards-out-of-a-banner-landmark-interaction.html?at=voiceover_macos" aria-label="VoiceOver for macOS test for task 12">VoiceOver for macOS</a></td><td>setFocusOnTopLink</td></tr>
<tr><td>13</td><td scope="row">Navigate forwards to a button inside a banner landmark in reading mode</td><td class="test"><a href="test-13-navigate-forwards-to-a-button-inside-a-banner-landmark-reading.html?at=jaws" aria-label="JAWS test for task 13">JAWS</a></td><td class="test"><a href="test-13-navigate-forwards-to-a-button-inside-a-banner-landmark-reading.html?at=nvda" aria-label="NVDA test for task 13">NVDA</a></td><td class="test none">not included</td><td>setFocusBeforeBannerAndHideTopLink</td></tr>
<tr><td>14</td><td scope="row">Navigate forwards to a button inside a banner landmark in interaction mode</td><td class="test"><a href="test-14-navigate-forwards-to-a-button-inside-a-banner-landmark-interaction.html?at=jaws" aria-label="JAWS test for task 14">JAWS</a></td><td class="test"><a href="test-14-navigate-forwards-to-a-button-inside-a-banner-landmark-interaction.html?at=nvda" aria-label="NVDA test for task 14">NVDA</a></td><td class="test none">not included</td><td>setFocusBeforeBannerAndHideTopLink</td></tr>
<tr><td>15</td><td scope="row">Navigate forwards to a button inside a banner landmark</td><td class="test none">not included</td><td class="test none">not included</td><td class="test"><a href="test-15-navigate-forwards-to-a-button-inside-a-banner-landmark-interaction.html?at=voiceover_macos" aria-label="VoiceOver for macOS test for task 15">VoiceOver for macOS</a></td><td>setFocusBeforeBannerAndHideTopLink</td></tr>
<tr><td>16</td><td scope="row">Navigate backwards to a button inside a banner landmark in reading mode</td><td class="test"><a href="test-16-navigate-backwards-to-a-button-inside-a-banner-landmark-reading.html?at=jaws" aria-label="JAWS test for task 16">JAWS</a></td><td class="test"><a href="test-16-navigate-backwards-to-a-button-inside-a-banner-landmark-reading.html?at=nvda" aria-label="NVDA test for task 16">NVDA</a></td><td class="test none">not included</td><td>setFocusAfterBannerAndHideBottomLink</td></tr>
<tr><td>17</td><td scope="row">Navigate backwards to a button inside a banner landmark in interaction mode</td><td class="test"><a href="test-17-navigate-backwards-to-a-button-inside-a-banner-landmark-interaction.html?at=jaws" aria-label="JAWS test for task 17">JAWS</a></td><td class="test"><a href="test-17-navigate-backwards-to-a-button-inside-a-banner-landmark-interaction.html?at=nvda" aria-label="NVDA test for task 17">NVDA</a></td><td class="test none">not included</td><td>setFocusAfterBannerAndHideBottomLink</td></tr>
<tr><td>18</td><td scope="row">Navigate backwards to a button inside a banner landmark</td><td class="test none">not included</td><td class="test none">not included</td><td class="test"><a href="test-18-navigate-backwards-to-a-button-inside-a-banner-landmark-interaction.html?at=voiceover_macos" aria-label="VoiceOver for macOS test for task 18">VoiceOver for macOS</a></td><td>setFocusAfterBannerAndHideBottomLink</td></tr>
<tr><td>19</td><td scope="row">Navigate forwards to an image inside a banner landmark in reading mode</td><td class="test"><a href="test-19-navigate-forwards-to-an-image-inside-a-banner-landmark-reading.html?at=jaws" aria-label="JAWS test for task 19">JAWS</a></td><td class="test"><a href="test-19-navigate-forwards-to-an-image-inside-a-banner-landmark-reading.html?at=nvda" aria-label="NVDA test for task 19">NVDA</a></td><td class="test none">not included</td><td>setFocusBeforeBanner</td></tr>
<tr><td>20</td><td scope="row">Navigate forwards to an image inside a banner landmark</td><td class="test none">not included</td><td class="test none">not included</td><td class="test"><a href="test-20-navigate-forwards-to-an-image-inside-a-banner-landmark-interaction.html?at=voiceover_macos" aria-label="VoiceOver for macOS test for task 20">VoiceOver for macOS</a></td><td>setFocusBeforeBanner</td></tr>
<tr><td>21</td><td scope="row">Navigate backwards to an image inside a banner landmark in reading mode</td><td class="test"><a href="test-21-navigate-backwards-to-an-image-inside-a-banner-landmark-reading.html?at=jaws" aria-label="JAWS test for task 21">JAWS</a></td><td class="test"><a href="test-21-navigate-backwards-to-an-image-inside-a-banner-landmark-reading.html?at=nvda" aria-label="NVDA test for task 21">NVDA</a></td><td class="test none">not included</td><td>setFocusAfterBanner</td></tr>
<tr><td>22</td><td scope="row">Navigate backwards to an image inside a banner landmark</td><td class="test none">not included</td><td class="test none">not included</td><td class="test"><a href="test-22-navigate-backwards-to-an-image-inside-a-banner-landmark-interaction.html?at=voiceover_macos" aria-label="VoiceOver for macOS test for task 22">VoiceOver for macOS</a></td><td>setFocusAfterBanner</td></tr>
<tr><td>23</td><td scope="row">Navigate forwards to a heading inside a banner landmark in reading mode</td><td class="test"><a href="test-23-navigate-forwards-to-a-heading-inside-a-banner-landmark-reading.html?at=jaws" aria-label="JAWS test for task 23">JAWS</a></td><td class="test"><a href="test-23-navigate-forwards-to-a-heading-inside-a-banner-landmark-reading.html?at=nvda" aria-label="NVDA test for task 23">NVDA</a></td><td class="test none">not included</td><td>setFocusBeforeBanner</td></tr>
<tr><td>24</td><td scope="row">Navigate forwards to a heading inside a banner landmark</td><td class="test none">not included</td><td class="test none">not included</td><td class="test"><a href="test-24-navigate-forwards-to-a-heading-inside-a-banner-landmark-interaction.html?at=voiceover_macos" aria-label="VoiceOver for macOS test for task 24">VoiceOver for macOS</a></td><td>setFocusBeforeBanner</td></tr>
<tr><td>25</td><td scope="row">Navigate backwards to a heading inside a banner landmark in reading mode</td><td class="test"><a href="test-25-navigate-backwards-to-a-heading-inside-a-banner-landmark-reading.html?at=jaws" aria-label="JAWS test for task 25">JAWS</a></td><td class="test"><a href="test-25-navigate-backwards-to-a-heading-inside-a-banner-landmark-reading.html?at=nvda" aria-label="NVDA test for task 25">NVDA</a></td><td class="test none">not included</td><td>setFocusAfterBanner</td></tr>
<tr><td>26</td><td scope="row">Navigate backwards to a heading inside a banner landmark</td><td class="test none">not included</td><td class="test none">not included</td><td class="test"><a href="test-26-navigate-backwards-to-a-heading-inside-a-banner-landmark-interaction.html?at=voiceover_macos" aria-label="VoiceOver for macOS test for task 26">VoiceOver for macOS</a></td><td>setFocusAfterBanner</td></tr>

    </tbody>
  </table>
  </main>
</body>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 3`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate forwards into a banner landmark in reading mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-01-navigate-forwards-into-a-banner-landmark-reading-jaws.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-01-navigate-forwards-into-a-banner-landmark-reading-jaws.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 4`] = `
"{
  "info": {
    "testId": 1,
    "task": "navigate forwards into a banner landmark",
    "title": "Navigate forwards into a banner landmark in reading mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "jaws",
      "raw": "JAWS",
      "name": "JAWS"
    },
    "mode": "reading",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusBeforeBanner.html",
    "setupScript": {
      "name": "setFocusBeforeBanner",
      "description": "sets focus on a link before the banner landmark",
      "source": "// sets focus on a link before the banner landmark\\ntestPageDocument.getElementById('beforelink').focus();\\n",
      "modulePath": "scripts/setFocusBeforeBanner.module.js",
      "jsonpPath": "scripts/setFocusBeforeBanner.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With the reading cursor on the 'Navigate forwards from here' link, navigate to the 'Top' link."
    ],
    "raw": "With the reading cursor on the 'Navigate forwards from here' link, navigate to the 'Top' link.",
    "mode": "Verify the Virtual Cursor is active by pressing Alt+Delete. If it is not, exit Forms Mode to activate the Virtual Cursor by pressing Escape."
  },
  "commands": [
    {
      "id": "R",
      "keystroke": "R",
      "keypresses": [
        {
          "id": "R",
          "keystroke": "R"
        }
      ]
    },
    {
      "id": "DOWN",
      "keystroke": "Down Arrow",
      "keypresses": [
        {
          "id": "DOWN",
          "keystroke": "Down Arrow"
        }
      ]
    },
    {
      "id": "TAB",
      "keystroke": "Tab",
      "keypresses": [
        {
          "id": "TAB",
          "keystroke": "Tab"
        }
      ]
    },
    {
      "id": "U",
      "keystroke": "U",
      "keypresses": [
        {
          "id": "U",
          "keystroke": "U"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'link' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Top' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 5`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate forwards into a banner landmark in reading mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-01-navigate-forwards-into-a-banner-landmark-reading-nvda.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-01-navigate-forwards-into-a-banner-landmark-reading-nvda.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 6`] = `
"{
  "info": {
    "testId": 1,
    "task": "navigate forwards into a banner landmark",
    "title": "Navigate forwards into a banner landmark in reading mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "nvda",
      "raw": "NVDA",
      "name": "NVDA"
    },
    "mode": "reading",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusBeforeBanner.html",
    "setupScript": {
      "name": "setFocusBeforeBanner",
      "description": "sets focus on a link before the banner landmark",
      "source": "// sets focus on a link before the banner landmark\\ntestPageDocument.getElementById('beforelink').focus();\\n",
      "modulePath": "scripts/setFocusBeforeBanner.module.js",
      "jsonpPath": "scripts/setFocusBeforeBanner.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With the reading cursor on the 'Navigate forwards from here' link, navigate to the 'Top' link."
    ],
    "raw": "With the reading cursor on the 'Navigate forwards from here' link, navigate to the 'Top' link.",
    "mode": "Ensure NVDA is in browse mode by pressing Escape. Note: This command has no effect if NVDA is already in browse mode."
  },
  "commands": [
    {
      "id": "D",
      "keystroke": "D",
      "keypresses": [
        {
          "id": "D",
          "keystroke": "D"
        }
      ]
    },
    {
      "id": "DOWN",
      "keystroke": "Down Arrow",
      "keypresses": [
        {
          "id": "DOWN",
          "keystroke": "Down Arrow"
        }
      ]
    },
    {
      "id": "TAB",
      "keystroke": "Tab",
      "keypresses": [
        {
          "id": "TAB",
          "keystroke": "Tab"
        }
      ]
    },
    {
      "id": "U",
      "keystroke": "U",
      "keypresses": [
        {
          "id": "U",
          "keystroke": "U"
        }
      ]
    },
    {
      "id": "K",
      "keystroke": "K",
      "keypresses": [
        {
          "id": "K",
          "keystroke": "K"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'link' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Top' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 7`] = `
"
<!DOCTYPE html>
<meta charset="utf-8">
<title>Navigate forwards into a banner landmark in reading mode</title>
<link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
<link rel="help" href="https://w3c.github.io/aria/#banner">

<script>
  var scripts = {
		setFocusBeforeBanner: function(testPageDocument){
			// sets focus on a link before the banner landmark
			testPageDocument.getElementById('beforelink').focus();
		}
	};
</script>
<script type="module">
  import { initialize, verifyATBehavior, displayTestPageAndInstructions } from "../resources/aria-at-harness.mjs";

  new Promise((resolve) => {
    fetch('../support.json')
      .then(response => resolve(response.json()))
    })
  .then(supportJson => {
    const testJson = {
  "setup_script_description": "sets focus on a link before the banner landmark",
  "setupTestPage": "setFocusBeforeBanner",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "reading",
  "task": "navigate forwards into a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With the reading cursor on the 'Navigate forwards from here' link, navigate to the 'Top' link.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'link' is conveyed"
    ],
    [
      "1",
      "Name 'Top' is conveyed"
    ]
  ]
};
    const commandJson = {
  "navigate forwards into a banner landmark": {
    "reading": {
      "jaws": [
        [ "R" ],
        [ "DOWN" ],
        [ "TAB" ],
        [ "U" ]
      ],
      "nvda": [
        [ "D" ],
        [ "DOWN" ],
        [ "TAB" ],
        [ "U" ],
        [ "K" ]
      ]
    },
    "interaction": {
      "jaws": [ [ "TAB" ] ],
      "nvda": [ [ "TAB" ] ],
      "voiceover_macos": [
        [
          "CTRL_OPT_RIGHT,CTRL_OPT_RIGHT"
        ],
        [ "CTRL_OPT_CMD_L" ]
      ]
    }
  }
};
    initialize(supportJson, commandJson);
    verifyATBehavior(testJson);
    displayTestPageAndInstructions("reference/2021-10-24_135455/banner.setFocusBeforeBanner.html");
  });
</script>
  "
`;

exports[`V1 test format version creates build files for v1 test (banner) 8`] = `
"{
  "setup_script_description": "sets focus on a link before the banner landmark",
  "setupTestPage": "setFocusBeforeBanner",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "reading",
  "task": "navigate forwards into a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With the reading cursor on the 'Navigate forwards from here' link, navigate to the 'Top' link.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'link' is conveyed"
    ],
    [
      "1",
      "Name 'Top' is conveyed"
    ]
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 9`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate forwards into a banner landmark in interaction mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-02-navigate-forwards-into-a-banner-landmark-interaction-jaws.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-02-navigate-forwards-into-a-banner-landmark-interaction-jaws.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 10`] = `
"{
  "info": {
    "testId": 2,
    "task": "navigate forwards into a banner landmark",
    "title": "Navigate forwards into a banner landmark in interaction mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "jaws",
      "raw": "JAWS",
      "name": "JAWS"
    },
    "mode": "interaction",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusBeforeBanner.html",
    "setupScript": {
      "name": "setFocusBeforeBanner",
      "description": "sets focus on a link before the banner landmark",
      "source": "// sets focus on a link before the banner landmark\\ntestPageDocument.getElementById('beforelink').focus();\\n",
      "modulePath": "scripts/setFocusBeforeBanner.module.js",
      "jsonpPath": "scripts/setFocusBeforeBanner.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With focus on the 'Navigate forwards from here' link, navigate to the 'Top' link."
    ],
    "raw": "With focus on the 'Navigate forwards from here' link, navigate to the 'Top' link.",
    "mode": "Verify the PC Cursor is active by pressing Alt+Delete. If it is not, turn off the Virtual Cursor by pressing Insert+Z."
  },
  "commands": [
    {
      "id": "TAB",
      "keystroke": "Tab",
      "keypresses": [
        {
          "id": "TAB",
          "keystroke": "Tab"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'link' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Top' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 11`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate forwards into a banner landmark in interaction mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-02-navigate-forwards-into-a-banner-landmark-interaction-nvda.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-02-navigate-forwards-into-a-banner-landmark-interaction-nvda.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 12`] = `
"{
  "info": {
    "testId": 2,
    "task": "navigate forwards into a banner landmark",
    "title": "Navigate forwards into a banner landmark in interaction mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "nvda",
      "raw": "NVDA",
      "name": "NVDA"
    },
    "mode": "interaction",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusBeforeBanner.html",
    "setupScript": {
      "name": "setFocusBeforeBanner",
      "description": "sets focus on a link before the banner landmark",
      "source": "// sets focus on a link before the banner landmark\\ntestPageDocument.getElementById('beforelink').focus();\\n",
      "modulePath": "scripts/setFocusBeforeBanner.module.js",
      "jsonpPath": "scripts/setFocusBeforeBanner.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With focus on the 'Navigate forwards from here' link, navigate to the 'Top' link."
    ],
    "raw": "With focus on the 'Navigate forwards from here' link, navigate to the 'Top' link.",
    "mode": "If NVDA did not make the focus mode sound when the test page loaded, press Insert+Space to turn focus mode on."
  },
  "commands": [
    {
      "id": "TAB",
      "keystroke": "Tab",
      "keypresses": [
        {
          "id": "TAB",
          "keystroke": "Tab"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'link' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Top' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 13`] = `
"
<!DOCTYPE html>
<meta charset="utf-8">
<title>Navigate forwards into a banner landmark in interaction mode</title>
<link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
<link rel="help" href="https://w3c.github.io/aria/#banner">

<script>
  var scripts = {
		setFocusBeforeBanner: function(testPageDocument){
			// sets focus on a link before the banner landmark
			testPageDocument.getElementById('beforelink').focus();
		}
	};
</script>
<script type="module">
  import { initialize, verifyATBehavior, displayTestPageAndInstructions } from "../resources/aria-at-harness.mjs";

  new Promise((resolve) => {
    fetch('../support.json')
      .then(response => resolve(response.json()))
    })
  .then(supportJson => {
    const testJson = {
  "setup_script_description": "sets focus on a link before the banner landmark",
  "setupTestPage": "setFocusBeforeBanner",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "interaction",
  "task": "navigate forwards into a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Navigate forwards from here' link, navigate to the 'Top' link.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'link' is conveyed"
    ],
    [
      "1",
      "Name 'Top' is conveyed"
    ]
  ]
};
    const commandJson = {
  "navigate forwards into a banner landmark": {
    "reading": {
      "jaws": [
        [ "R" ],
        [ "DOWN" ],
        [ "TAB" ],
        [ "U" ]
      ],
      "nvda": [
        [ "D" ],
        [ "DOWN" ],
        [ "TAB" ],
        [ "U" ],
        [ "K" ]
      ]
    },
    "interaction": {
      "jaws": [ [ "TAB" ] ],
      "nvda": [ [ "TAB" ] ],
      "voiceover_macos": [
        [
          "CTRL_OPT_RIGHT,CTRL_OPT_RIGHT"
        ],
        [ "CTRL_OPT_CMD_L" ]
      ]
    }
  }
};
    initialize(supportJson, commandJson);
    verifyATBehavior(testJson);
    displayTestPageAndInstructions("reference/2021-10-24_135455/banner.setFocusBeforeBanner.html");
  });
</script>
  "
`;

exports[`V1 test format version creates build files for v1 test (banner) 14`] = `
"{
  "setup_script_description": "sets focus on a link before the banner landmark",
  "setupTestPage": "setFocusBeforeBanner",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "interaction",
  "task": "navigate forwards into a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Navigate forwards from here' link, navigate to the 'Top' link.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'link' is conveyed"
    ],
    [
      "1",
      "Name 'Top' is conveyed"
    ]
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 15`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate forwards into a banner landmark</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-03-navigate-forwards-into-a-banner-landmark-interaction-voiceover_macos.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-03-navigate-forwards-into-a-banner-landmark-interaction-voiceover_macos.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 16`] = `
"{
  "info": {
    "testId": 3,
    "task": "navigate forwards into a banner landmark",
    "title": "Navigate forwards into a banner landmark",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "voiceover_macos",
      "raw": "VOICEOVER_MACOS",
      "name": "VoiceOver for macOS"
    },
    "mode": "interaction",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusBeforeBanner.html",
    "setupScript": {
      "name": "setFocusBeforeBanner",
      "description": "sets focus on a link before the banner landmark",
      "source": "// sets focus on a link before the banner landmark\\ntestPageDocument.getElementById('beforelink').focus();\\n",
      "modulePath": "scripts/setFocusBeforeBanner.module.js",
      "jsonpPath": "scripts/setFocusBeforeBanner.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With focus on the 'Navigate forwards from here' link, navigate to the 'Top' link."
    ],
    "raw": "With focus on the 'Navigate forwards from here' link, navigate to the 'Top' link.",
    "mode": "Toggle Quick Nav OFF by pressing the Left Arrow and Right Arrow keys at the same time."
  },
  "commands": [
    {
      "id": "CTRL_OPT_RIGHT,CTRL_OPT_RIGHT",
      "keystroke": "Control+Option+Right, then Control+Option+Right",
      "keypresses": [
        {
          "id": "CTRL_OPT_RIGHT",
          "keystroke": "Control+Option+Right"
        },
        {
          "id": "CTRL_OPT_RIGHT",
          "keystroke": "Control+Option+Right"
        }
      ]
    },
    {
      "id": "CTRL_OPT_CMD_L",
      "keystroke": "Control+Option+Command+L",
      "keypresses": [
        {
          "id": "CTRL_OPT_CMD_L",
          "keystroke": "Control+Option+Command+L"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'link' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Top' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 17`] = `
"
<!DOCTYPE html>
<meta charset="utf-8">
<title>Navigate forwards into a banner landmark</title>
<link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
<link rel="help" href="https://w3c.github.io/aria/#banner">

<script>
  var scripts = {
		setFocusBeforeBanner: function(testPageDocument){
			// sets focus on a link before the banner landmark
			testPageDocument.getElementById('beforelink').focus();
		}
	};
</script>
<script type="module">
  import { initialize, verifyATBehavior, displayTestPageAndInstructions } from "../resources/aria-at-harness.mjs";

  new Promise((resolve) => {
    fetch('../support.json')
      .then(response => resolve(response.json()))
    })
  .then(supportJson => {
    const testJson = {
  "setup_script_description": "sets focus on a link before the banner landmark",
  "setupTestPage": "setFocusBeforeBanner",
  "applies_to": [
    "voiceover_macos"
  ],
  "mode": "interaction",
  "task": "navigate forwards into a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Navigate forwards from here' link, navigate to the 'Top' link.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'link' is conveyed"
    ],
    [
      "1",
      "Name 'Top' is conveyed"
    ]
  ]
};
    const commandJson = {
  "navigate forwards into a banner landmark": {
    "reading": {
      "jaws": [
        [ "R" ],
        [ "DOWN" ],
        [ "TAB" ],
        [ "U" ]
      ],
      "nvda": [
        [ "D" ],
        [ "DOWN" ],
        [ "TAB" ],
        [ "U" ],
        [ "K" ]
      ]
    },
    "interaction": {
      "jaws": [ [ "TAB" ] ],
      "nvda": [ [ "TAB" ] ],
      "voiceover_macos": [
        [
          "CTRL_OPT_RIGHT,CTRL_OPT_RIGHT"
        ],
        [ "CTRL_OPT_CMD_L" ]
      ]
    }
  }
};
    initialize(supportJson, commandJson);
    verifyATBehavior(testJson);
    displayTestPageAndInstructions("reference/2021-10-24_135455/banner.setFocusBeforeBanner.html");
  });
</script>
  "
`;

exports[`V1 test format version creates build files for v1 test (banner) 18`] = `
"{
  "setup_script_description": "sets focus on a link before the banner landmark",
  "setupTestPage": "setFocusBeforeBanner",
  "applies_to": [
    "voiceover_macos"
  ],
  "mode": "interaction",
  "task": "navigate forwards into a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Navigate forwards from here' link, navigate to the 'Top' link.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'link' is conveyed"
    ],
    [
      "1",
      "Name 'Top' is conveyed"
    ]
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 19`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate backwards into a banner landmark in reading mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-04-navigate-backwards-into-a-banner-landmark-reading-jaws.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-04-navigate-backwards-into-a-banner-landmark-reading-jaws.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 20`] = `
"{
  "info": {
    "testId": 4,
    "task": "navigate backwards into a banner landmark",
    "title": "Navigate backwards into a banner landmark in reading mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "jaws",
      "raw": "JAWS",
      "name": "JAWS"
    },
    "mode": "reading",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusAfterBanner.html",
    "setupScript": {
      "name": "setFocusAfterBanner",
      "description": "sets focus on a link after the banner landmark",
      "source": "// sets focus on a link after the banner landmark\\ntestPageDocument.getElementById('afterlink').focus();\\n",
      "modulePath": "scripts/setFocusAfterBanner.module.js",
      "jsonpPath": "scripts/setFocusAfterBanner.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With the reading cursor on the 'Navigate backwards from here' link, navigate to the 'Bottom' link."
    ],
    "raw": "With the reading cursor on the 'Navigate backwards from here' link, navigate to the 'Bottom' link.",
    "mode": "Verify the Virtual Cursor is active by pressing Alt+Delete. If it is not, exit Forms Mode to activate the Virtual Cursor by pressing Escape."
  },
  "commands": [
    {
      "id": "UP",
      "keystroke": "Up Arrow",
      "keypresses": [
        {
          "id": "UP",
          "keystroke": "Up Arrow"
        }
      ]
    },
    {
      "id": "SHIFT_TAB",
      "keystroke": "Shift+Tab",
      "keypresses": [
        {
          "id": "SHIFT_TAB",
          "keystroke": "Shift+Tab"
        }
      ]
    },
    {
      "id": "SHIFT_U",
      "keystroke": "Shift+U",
      "keypresses": [
        {
          "id": "SHIFT_U",
          "keystroke": "Shift+U"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'link' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Bottom' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 21`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate backwards into a banner landmark in reading mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-04-navigate-backwards-into-a-banner-landmark-reading-nvda.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-04-navigate-backwards-into-a-banner-landmark-reading-nvda.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 22`] = `
"{
  "info": {
    "testId": 4,
    "task": "navigate backwards into a banner landmark",
    "title": "Navigate backwards into a banner landmark in reading mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "nvda",
      "raw": "NVDA",
      "name": "NVDA"
    },
    "mode": "reading",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusAfterBanner.html",
    "setupScript": {
      "name": "setFocusAfterBanner",
      "description": "sets focus on a link after the banner landmark",
      "source": "// sets focus on a link after the banner landmark\\ntestPageDocument.getElementById('afterlink').focus();\\n",
      "modulePath": "scripts/setFocusAfterBanner.module.js",
      "jsonpPath": "scripts/setFocusAfterBanner.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With the reading cursor on the 'Navigate backwards from here' link, navigate to the 'Bottom' link."
    ],
    "raw": "With the reading cursor on the 'Navigate backwards from here' link, navigate to the 'Bottom' link.",
    "mode": "Ensure NVDA is in browse mode by pressing Escape. Note: This command has no effect if NVDA is already in browse mode."
  },
  "commands": [
    {
      "id": "UP",
      "keystroke": "Up Arrow",
      "keypresses": [
        {
          "id": "UP",
          "keystroke": "Up Arrow"
        }
      ]
    },
    {
      "id": "SHIFT_TAB",
      "keystroke": "Shift+Tab",
      "keypresses": [
        {
          "id": "SHIFT_TAB",
          "keystroke": "Shift+Tab"
        }
      ]
    },
    {
      "id": "SHIFT_U",
      "keystroke": "Shift+U",
      "keypresses": [
        {
          "id": "SHIFT_U",
          "keystroke": "Shift+U"
        }
      ]
    },
    {
      "id": "SHIFT_K",
      "keystroke": "Shift+K",
      "keypresses": [
        {
          "id": "SHIFT_K",
          "keystroke": "Shift+K"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'link' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Bottom' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 23`] = `
"
<!DOCTYPE html>
<meta charset="utf-8">
<title>Navigate backwards into a banner landmark in reading mode</title>
<link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
<link rel="help" href="https://w3c.github.io/aria/#banner">

<script>
  var scripts = {
		setFocusAfterBanner: function(testPageDocument){
			// sets focus on a link after the banner landmark
			testPageDocument.getElementById('afterlink').focus();
		}
	};
</script>
<script type="module">
  import { initialize, verifyATBehavior, displayTestPageAndInstructions } from "../resources/aria-at-harness.mjs";

  new Promise((resolve) => {
    fetch('../support.json')
      .then(response => resolve(response.json()))
    })
  .then(supportJson => {
    const testJson = {
  "setup_script_description": "sets focus on a link after the banner landmark",
  "setupTestPage": "setFocusAfterBanner",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "reading",
  "task": "navigate backwards into a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With the reading cursor on the 'Navigate backwards from here' link, navigate to the 'Bottom' link.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'link' is conveyed"
    ],
    [
      "1",
      "Name 'Bottom' is conveyed"
    ]
  ]
};
    const commandJson = {
  "navigate backwards into a banner landmark": {
    "reading": {
      "jaws": [
        [ "UP" ],
        [ "SHIFT_TAB" ],
        [ "SHIFT_U" ]
      ],
      "nvda": [
        [ "UP" ],
        [ "SHIFT_TAB" ],
        [ "SHIFT_U" ],
        [ "SHIFT_K" ]
      ]
    },
    "interaction": {
      "jaws": [ [ "SHIFT_TAB" ] ],
      "nvda": [ [ "SHIFT_TAB" ] ],
      "voiceover_macos": [
        [
          "CTRL_OPT_LEFT,CTRL_OPT_LEFT"
        ],
        [ "SHIFT_CTRL_OPT_CMD_L" ]
      ]
    }
  }
};
    initialize(supportJson, commandJson);
    verifyATBehavior(testJson);
    displayTestPageAndInstructions("reference/2021-10-24_135455/banner.setFocusAfterBanner.html");
  });
</script>
  "
`;

exports[`V1 test format version creates build files for v1 test (banner) 24`] = `
"{
  "setup_script_description": "sets focus on a link after the banner landmark",
  "setupTestPage": "setFocusAfterBanner",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "reading",
  "task": "navigate backwards into a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With the reading cursor on the 'Navigate backwards from here' link, navigate to the 'Bottom' link.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'link' is conveyed"
    ],
    [
      "1",
      "Name 'Bottom' is conveyed"
    ]
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 25`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate backwards into a banner landmark in interaction mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-05-navigate-backwards-into-a-banner-landmark-interaction-jaws.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-05-navigate-backwards-into-a-banner-landmark-interaction-jaws.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 26`] = `
"{
  "info": {
    "testId": 5,
    "task": "navigate backwards into a banner landmark",
    "title": "Navigate backwards into a banner landmark in interaction mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "jaws",
      "raw": "JAWS",
      "name": "JAWS"
    },
    "mode": "interaction",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusAfterBanner.html",
    "setupScript": {
      "name": "setFocusAfterBanner",
      "description": "sets focus on a link after the banner landmark",
      "source": "// sets focus on a link after the banner landmark\\ntestPageDocument.getElementById('afterlink').focus();\\n",
      "modulePath": "scripts/setFocusAfterBanner.module.js",
      "jsonpPath": "scripts/setFocusAfterBanner.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With focus on the 'Navigate backwards from here' link, navigate to the 'Bottom' link."
    ],
    "raw": "With focus on the 'Navigate backwards from here' link, navigate to the 'Bottom' link.",
    "mode": "Verify the PC Cursor is active by pressing Alt+Delete. If it is not, turn off the Virtual Cursor by pressing Insert+Z."
  },
  "commands": [
    {
      "id": "SHIFT_TAB",
      "keystroke": "Shift+Tab",
      "keypresses": [
        {
          "id": "SHIFT_TAB",
          "keystroke": "Shift+Tab"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'link' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Bottom' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 27`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate backwards into a banner landmark in interaction mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-05-navigate-backwards-into-a-banner-landmark-interaction-nvda.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-05-navigate-backwards-into-a-banner-landmark-interaction-nvda.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 28`] = `
"{
  "info": {
    "testId": 5,
    "task": "navigate backwards into a banner landmark",
    "title": "Navigate backwards into a banner landmark in interaction mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "nvda",
      "raw": "NVDA",
      "name": "NVDA"
    },
    "mode": "interaction",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusAfterBanner.html",
    "setupScript": {
      "name": "setFocusAfterBanner",
      "description": "sets focus on a link after the banner landmark",
      "source": "// sets focus on a link after the banner landmark\\ntestPageDocument.getElementById('afterlink').focus();\\n",
      "modulePath": "scripts/setFocusAfterBanner.module.js",
      "jsonpPath": "scripts/setFocusAfterBanner.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With focus on the 'Navigate backwards from here' link, navigate to the 'Bottom' link."
    ],
    "raw": "With focus on the 'Navigate backwards from here' link, navigate to the 'Bottom' link.",
    "mode": "If NVDA did not make the focus mode sound when the test page loaded, press Insert+Space to turn focus mode on."
  },
  "commands": [
    {
      "id": "SHIFT_TAB",
      "keystroke": "Shift+Tab",
      "keypresses": [
        {
          "id": "SHIFT_TAB",
          "keystroke": "Shift+Tab"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'link' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Bottom' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 29`] = `
"
<!DOCTYPE html>
<meta charset="utf-8">
<title>Navigate backwards into a banner landmark in interaction mode</title>
<link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
<link rel="help" href="https://w3c.github.io/aria/#banner">

<script>
  var scripts = {
		setFocusAfterBanner: function(testPageDocument){
			// sets focus on a link after the banner landmark
			testPageDocument.getElementById('afterlink').focus();
		}
	};
</script>
<script type="module">
  import { initialize, verifyATBehavior, displayTestPageAndInstructions } from "../resources/aria-at-harness.mjs";

  new Promise((resolve) => {
    fetch('../support.json')
      .then(response => resolve(response.json()))
    })
  .then(supportJson => {
    const testJson = {
  "setup_script_description": "sets focus on a link after the banner landmark",
  "setupTestPage": "setFocusAfterBanner",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "interaction",
  "task": "navigate backwards into a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Navigate backwards from here' link, navigate to the 'Bottom' link.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'link' is conveyed"
    ],
    [
      "1",
      "Name 'Bottom' is conveyed"
    ]
  ]
};
    const commandJson = {
  "navigate backwards into a banner landmark": {
    "reading": {
      "jaws": [
        [ "UP" ],
        [ "SHIFT_TAB" ],
        [ "SHIFT_U" ]
      ],
      "nvda": [
        [ "UP" ],
        [ "SHIFT_TAB" ],
        [ "SHIFT_U" ],
        [ "SHIFT_K" ]
      ]
    },
    "interaction": {
      "jaws": [ [ "SHIFT_TAB" ] ],
      "nvda": [ [ "SHIFT_TAB" ] ],
      "voiceover_macos": [
        [
          "CTRL_OPT_LEFT,CTRL_OPT_LEFT"
        ],
        [ "SHIFT_CTRL_OPT_CMD_L" ]
      ]
    }
  }
};
    initialize(supportJson, commandJson);
    verifyATBehavior(testJson);
    displayTestPageAndInstructions("reference/2021-10-24_135455/banner.setFocusAfterBanner.html");
  });
</script>
  "
`;

exports[`V1 test format version creates build files for v1 test (banner) 30`] = `
"{
  "setup_script_description": "sets focus on a link after the banner landmark",
  "setupTestPage": "setFocusAfterBanner",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "interaction",
  "task": "navigate backwards into a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Navigate backwards from here' link, navigate to the 'Bottom' link.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'link' is conveyed"
    ],
    [
      "1",
      "Name 'Bottom' is conveyed"
    ]
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 31`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate backwards into a banner landmark</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-06-navigate-backwards-into-a-banner-landmark-interaction-voiceover_macos.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-06-navigate-backwards-into-a-banner-landmark-interaction-voiceover_macos.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 32`] = `
"{
  "info": {
    "testId": 6,
    "task": "navigate backwards into a banner landmark",
    "title": "Navigate backwards into a banner landmark",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "voiceover_macos",
      "raw": "VOICEOVER_MACOS",
      "name": "VoiceOver for macOS"
    },
    "mode": "interaction",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusAfterBanner.html",
    "setupScript": {
      "name": "setFocusAfterBanner",
      "description": "sets focus on a link after the banner landmark",
      "source": "// sets focus on a link after the banner landmark\\ntestPageDocument.getElementById('afterlink').focus();\\n",
      "modulePath": "scripts/setFocusAfterBanner.module.js",
      "jsonpPath": "scripts/setFocusAfterBanner.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With focus on the 'Navigate backwards from here' link, navigate to the 'Bottom' link."
    ],
    "raw": "With focus on the 'Navigate backwards from here' link, navigate to the 'Bottom' link.",
    "mode": "Toggle Quick Nav OFF by pressing the Left Arrow and Right Arrow keys at the same time."
  },
  "commands": [
    {
      "id": "CTRL_OPT_LEFT,CTRL_OPT_LEFT",
      "keystroke": "Ctrl+Option+Left, then Ctrl+Option+Left",
      "keypresses": [
        {
          "id": "CTRL_OPT_LEFT",
          "keystroke": "Ctrl+Option+Left"
        },
        {
          "id": "CTRL_OPT_LEFT",
          "keystroke": "Ctrl+Option+Left"
        }
      ]
    },
    {
      "id": "SHIFT_CTRL_OPT_CMD_L",
      "keystroke": "Shift+Control+Option+Command+L",
      "keypresses": [
        {
          "id": "SHIFT_CTRL_OPT_CMD_L",
          "keystroke": "Shift+Control+Option+Command+L"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'link' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Bottom' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 33`] = `
"
<!DOCTYPE html>
<meta charset="utf-8">
<title>Navigate backwards into a banner landmark</title>
<link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
<link rel="help" href="https://w3c.github.io/aria/#banner">

<script>
  var scripts = {
		setFocusAfterBanner: function(testPageDocument){
			// sets focus on a link after the banner landmark
			testPageDocument.getElementById('afterlink').focus();
		}
	};
</script>
<script type="module">
  import { initialize, verifyATBehavior, displayTestPageAndInstructions } from "../resources/aria-at-harness.mjs";

  new Promise((resolve) => {
    fetch('../support.json')
      .then(response => resolve(response.json()))
    })
  .then(supportJson => {
    const testJson = {
  "setup_script_description": "sets focus on a link after the banner landmark",
  "setupTestPage": "setFocusAfterBanner",
  "applies_to": [
    "voiceover_macos"
  ],
  "mode": "interaction",
  "task": "navigate backwards into a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Navigate backwards from here' link, navigate to the 'Bottom' link.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'link' is conveyed"
    ],
    [
      "1",
      "Name 'Bottom' is conveyed"
    ]
  ]
};
    const commandJson = {
  "navigate backwards into a banner landmark": {
    "reading": {
      "jaws": [
        [ "UP" ],
        [ "SHIFT_TAB" ],
        [ "SHIFT_U" ]
      ],
      "nvda": [
        [ "UP" ],
        [ "SHIFT_TAB" ],
        [ "SHIFT_U" ],
        [ "SHIFT_K" ]
      ]
    },
    "interaction": {
      "jaws": [ [ "SHIFT_TAB" ] ],
      "nvda": [ [ "SHIFT_TAB" ] ],
      "voiceover_macos": [
        [
          "CTRL_OPT_LEFT,CTRL_OPT_LEFT"
        ],
        [ "SHIFT_CTRL_OPT_CMD_L" ]
      ]
    }
  }
};
    initialize(supportJson, commandJson);
    verifyATBehavior(testJson);
    displayTestPageAndInstructions("reference/2021-10-24_135455/banner.setFocusAfterBanner.html");
  });
</script>
  "
`;

exports[`V1 test format version creates build files for v1 test (banner) 34`] = `
"{
  "setup_script_description": "sets focus on a link after the banner landmark",
  "setupTestPage": "setFocusAfterBanner",
  "applies_to": [
    "voiceover_macos"
  ],
  "mode": "interaction",
  "task": "navigate backwards into a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Navigate backwards from here' link, navigate to the 'Bottom' link.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'link' is conveyed"
    ],
    [
      "1",
      "Name 'Bottom' is conveyed"
    ]
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 35`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate forwards out of a banner landmark in reading mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-07-navigate-forwards-out-of-a-banner-landmark-reading-jaws.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-07-navigate-forwards-out-of-a-banner-landmark-reading-jaws.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 36`] = `
"{
  "info": {
    "testId": 7,
    "task": "navigate forwards out of a banner landmark",
    "title": "Navigate forwards out of a banner landmark in reading mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "jaws",
      "raw": "JAWS",
      "name": "JAWS"
    },
    "mode": "reading",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusOnBottomLink.html",
    "setupScript": {
      "name": "setFocusOnBottomLink",
      "description": "sets focus on the 'Bottom' link",
      "source": "// sets focus on the 'Bottom' link\\ntestPageDocument.getElementById('bottom').focus();\\n",
      "modulePath": "scripts/setFocusOnBottomLink.module.js",
      "jsonpPath": "scripts/setFocusOnBottomLink.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With the reading cursor on the 'Bottom' link, navigate to the 'Navigate backwards from here' link."
    ],
    "raw": "With the reading cursor on the 'Bottom' link, navigate to the 'Navigate backwards from here' link.",
    "mode": "Verify the Virtual Cursor is active by pressing Alt+Delete. If it is not, exit Forms Mode to activate the Virtual Cursor by pressing Escape."
  },
  "commands": [
    {
      "id": "DOWN",
      "keystroke": "Down Arrow",
      "keypresses": [
        {
          "id": "DOWN",
          "keystroke": "Down Arrow"
        }
      ]
    },
    {
      "id": "U",
      "keystroke": "U",
      "keypresses": [
        {
          "id": "U",
          "keystroke": "U"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Banner landmark boundary is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'link' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Navigate backwards from here' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 37`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate forwards out of a banner landmark in reading mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-07-navigate-forwards-out-of-a-banner-landmark-reading-nvda.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-07-navigate-forwards-out-of-a-banner-landmark-reading-nvda.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 38`] = `
"{
  "info": {
    "testId": 7,
    "task": "navigate forwards out of a banner landmark",
    "title": "Navigate forwards out of a banner landmark in reading mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "nvda",
      "raw": "NVDA",
      "name": "NVDA"
    },
    "mode": "reading",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusOnBottomLink.html",
    "setupScript": {
      "name": "setFocusOnBottomLink",
      "description": "sets focus on the 'Bottom' link",
      "source": "// sets focus on the 'Bottom' link\\ntestPageDocument.getElementById('bottom').focus();\\n",
      "modulePath": "scripts/setFocusOnBottomLink.module.js",
      "jsonpPath": "scripts/setFocusOnBottomLink.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With the reading cursor on the 'Bottom' link, navigate to the 'Navigate backwards from here' link."
    ],
    "raw": "With the reading cursor on the 'Bottom' link, navigate to the 'Navigate backwards from here' link.",
    "mode": "Ensure NVDA is in browse mode by pressing Escape. Note: This command has no effect if NVDA is already in browse mode."
  },
  "commands": [
    {
      "id": "DOWN",
      "keystroke": "Down Arrow",
      "keypresses": [
        {
          "id": "DOWN",
          "keystroke": "Down Arrow"
        }
      ]
    },
    {
      "id": "U",
      "keystroke": "U",
      "keypresses": [
        {
          "id": "U",
          "keystroke": "U"
        }
      ]
    },
    {
      "id": "K",
      "keystroke": "K",
      "keypresses": [
        {
          "id": "K",
          "keystroke": "K"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Banner landmark boundary is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'link' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Navigate backwards from here' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 39`] = `
"
<!DOCTYPE html>
<meta charset="utf-8">
<title>Navigate forwards out of a banner landmark in reading mode</title>
<link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
<link rel="help" href="https://w3c.github.io/aria/#banner">

<script>
  var scripts = {
		setFocusOnBottomLink: function(testPageDocument){
			// sets focus on the 'Bottom' link
			testPageDocument.getElementById('bottom').focus();
		}
	};
</script>
<script type="module">
  import { initialize, verifyATBehavior, displayTestPageAndInstructions } from "../resources/aria-at-harness.mjs";

  new Promise((resolve) => {
    fetch('../support.json')
      .then(response => resolve(response.json()))
    })
  .then(supportJson => {
    const testJson = {
  "setup_script_description": "sets focus on the 'Bottom' link",
  "setupTestPage": "setFocusOnBottomLink",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "reading",
  "task": "navigate forwards out of a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With the reading cursor on the 'Bottom' link, navigate to the 'Navigate backwards from here' link.",
  "output_assertions": [
    [
      "1",
      "Banner landmark boundary is conveyed"
    ],
    [
      "1",
      "Role 'link' is conveyed"
    ],
    [
      "1",
      "Name 'Navigate backwards from here' is conveyed"
    ]
  ]
};
    const commandJson = {
  "navigate forwards out of a banner landmark": {
    "reading": {
      "jaws": [ [ "DOWN" ], [ "U" ] ],
      "nvda": [ [ "DOWN" ], [ "U" ], [ "K" ] ]
    },
    "interaction": {
      "jaws": [ [ "TAB" ] ],
      "nvda": [ [ "TAB" ] ],
      "voiceover_macos": [
        [
          "CTRL_OPT_RIGHT,CTRL_OPT_RIGHT"
        ],
        [ "CTRL_OPT_CMD_L" ]
      ]
    }
  }
};
    initialize(supportJson, commandJson);
    verifyATBehavior(testJson);
    displayTestPageAndInstructions("reference/2021-10-24_135455/banner.setFocusOnBottomLink.html");
  });
</script>
  "
`;

exports[`V1 test format version creates build files for v1 test (banner) 40`] = `
"{
  "setup_script_description": "sets focus on the 'Bottom' link",
  "setupTestPage": "setFocusOnBottomLink",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "reading",
  "task": "navigate forwards out of a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With the reading cursor on the 'Bottom' link, navigate to the 'Navigate backwards from here' link.",
  "output_assertions": [
    [
      "1",
      "Banner landmark boundary is conveyed"
    ],
    [
      "1",
      "Role 'link' is conveyed"
    ],
    [
      "1",
      "Name 'Navigate backwards from here' is conveyed"
    ]
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 41`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate forwards out of a banner landmark in interaction mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-08-navigate-forwards-out-of-a-banner-landmark-interaction-jaws.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-08-navigate-forwards-out-of-a-banner-landmark-interaction-jaws.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 42`] = `
"{
  "info": {
    "testId": 8,
    "task": "navigate forwards out of a banner landmark",
    "title": "Navigate forwards out of a banner landmark in interaction mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "jaws",
      "raw": "JAWS",
      "name": "JAWS"
    },
    "mode": "interaction",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusOnBottomLink.html",
    "setupScript": {
      "name": "setFocusOnBottomLink",
      "description": "sets focus on the 'Bottom' link",
      "source": "// sets focus on the 'Bottom' link\\ntestPageDocument.getElementById('bottom').focus();\\n",
      "modulePath": "scripts/setFocusOnBottomLink.module.js",
      "jsonpPath": "scripts/setFocusOnBottomLink.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With focus on the 'Bottom' link, navigate to the 'Navigate backwards from here' link."
    ],
    "raw": "With focus on the 'Bottom' link, navigate to the 'Navigate backwards from here' link.",
    "mode": "Verify the PC Cursor is active by pressing Alt+Delete. If it is not, turn off the Virtual Cursor by pressing Insert+Z."
  },
  "commands": [
    {
      "id": "TAB",
      "keystroke": "Tab",
      "keypresses": [
        {
          "id": "TAB",
          "keystroke": "Tab"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Banner landmark boundary is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'link' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Navigate backwards from here' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 43`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate forwards out of a banner landmark in interaction mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-08-navigate-forwards-out-of-a-banner-landmark-interaction-nvda.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-08-navigate-forwards-out-of-a-banner-landmark-interaction-nvda.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 44`] = `
"{
  "info": {
    "testId": 8,
    "task": "navigate forwards out of a banner landmark",
    "title": "Navigate forwards out of a banner landmark in interaction mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "nvda",
      "raw": "NVDA",
      "name": "NVDA"
    },
    "mode": "interaction",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusOnBottomLink.html",
    "setupScript": {
      "name": "setFocusOnBottomLink",
      "description": "sets focus on the 'Bottom' link",
      "source": "// sets focus on the 'Bottom' link\\ntestPageDocument.getElementById('bottom').focus();\\n",
      "modulePath": "scripts/setFocusOnBottomLink.module.js",
      "jsonpPath": "scripts/setFocusOnBottomLink.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With focus on the 'Bottom' link, navigate to the 'Navigate backwards from here' link."
    ],
    "raw": "With focus on the 'Bottom' link, navigate to the 'Navigate backwards from here' link.",
    "mode": "If NVDA did not make the focus mode sound when the test page loaded, press Insert+Space to turn focus mode on."
  },
  "commands": [
    {
      "id": "TAB",
      "keystroke": "Tab",
      "keypresses": [
        {
          "id": "TAB",
          "keystroke": "Tab"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Banner landmark boundary is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'link' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Navigate backwards from here' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 45`] = `
"
<!DOCTYPE html>
<meta charset="utf-8">
<title>Navigate forwards out of a banner landmark in interaction mode</title>
<link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
<link rel="help" href="https://w3c.github.io/aria/#banner">

<script>
  var scripts = {
		setFocusOnBottomLink: function(testPageDocument){
			// sets focus on the 'Bottom' link
			testPageDocument.getElementById('bottom').focus();
		}
	};
</script>
<script type="module">
  import { initialize, verifyATBehavior, displayTestPageAndInstructions } from "../resources/aria-at-harness.mjs";

  new Promise((resolve) => {
    fetch('../support.json')
      .then(response => resolve(response.json()))
    })
  .then(supportJson => {
    const testJson = {
  "setup_script_description": "sets focus on the 'Bottom' link",
  "setupTestPage": "setFocusOnBottomLink",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "interaction",
  "task": "navigate forwards out of a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Bottom' link, navigate to the 'Navigate backwards from here' link.",
  "output_assertions": [
    [
      "1",
      "Banner landmark boundary is conveyed"
    ],
    [
      "1",
      "Role 'link' is conveyed"
    ],
    [
      "1",
      "Name 'Navigate backwards from here' is conveyed"
    ]
  ]
};
    const commandJson = {
  "navigate forwards out of a banner landmark": {
    "reading": {
      "jaws": [ [ "DOWN" ], [ "U" ] ],
      "nvda": [ [ "DOWN" ], [ "U" ], [ "K" ] ]
    },
    "interaction": {
      "jaws": [ [ "TAB" ] ],
      "nvda": [ [ "TAB" ] ],
      "voiceover_macos": [
        [
          "CTRL_OPT_RIGHT,CTRL_OPT_RIGHT"
        ],
        [ "CTRL_OPT_CMD_L" ]
      ]
    }
  }
};
    initialize(supportJson, commandJson);
    verifyATBehavior(testJson);
    displayTestPageAndInstructions("reference/2021-10-24_135455/banner.setFocusOnBottomLink.html");
  });
</script>
  "
`;

exports[`V1 test format version creates build files for v1 test (banner) 46`] = `
"{
  "setup_script_description": "sets focus on the 'Bottom' link",
  "setupTestPage": "setFocusOnBottomLink",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "interaction",
  "task": "navigate forwards out of a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Bottom' link, navigate to the 'Navigate backwards from here' link.",
  "output_assertions": [
    [
      "1",
      "Banner landmark boundary is conveyed"
    ],
    [
      "1",
      "Role 'link' is conveyed"
    ],
    [
      "1",
      "Name 'Navigate backwards from here' is conveyed"
    ]
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 47`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate forwards out of a banner landmark</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-09-navigate-forwards-out-of-a-banner-landmark-interaction-voiceover_macos.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-09-navigate-forwards-out-of-a-banner-landmark-interaction-voiceover_macos.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 48`] = `
"{
  "info": {
    "testId": 9,
    "task": "navigate forwards out of a banner landmark",
    "title": "Navigate forwards out of a banner landmark",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "voiceover_macos",
      "raw": "VOICEOVER_MACOS",
      "name": "VoiceOver for macOS"
    },
    "mode": "interaction",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusOnBottomLink.html",
    "setupScript": {
      "name": "setFocusOnBottomLink",
      "description": "sets focus on the 'Bottom' link",
      "source": "// sets focus on the 'Bottom' link\\ntestPageDocument.getElementById('bottom').focus();\\n",
      "modulePath": "scripts/setFocusOnBottomLink.module.js",
      "jsonpPath": "scripts/setFocusOnBottomLink.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With focus on the 'Bottom' link, navigate to the 'Navigate backwards from here' link."
    ],
    "raw": "With focus on the 'Bottom' link, navigate to the 'Navigate backwards from here' link.",
    "mode": "Toggle Quick Nav OFF by pressing the Left Arrow and Right Arrow keys at the same time."
  },
  "commands": [
    {
      "id": "CTRL_OPT_RIGHT,CTRL_OPT_RIGHT",
      "keystroke": "Control+Option+Right, then Control+Option+Right",
      "keypresses": [
        {
          "id": "CTRL_OPT_RIGHT",
          "keystroke": "Control+Option+Right"
        },
        {
          "id": "CTRL_OPT_RIGHT",
          "keystroke": "Control+Option+Right"
        }
      ]
    },
    {
      "id": "CTRL_OPT_CMD_L",
      "keystroke": "Control+Option+Command+L",
      "keypresses": [
        {
          "id": "CTRL_OPT_CMD_L",
          "keystroke": "Control+Option+Command+L"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Banner landmark boundary is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'link' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Navigate backwards from here' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 49`] = `
"
<!DOCTYPE html>
<meta charset="utf-8">
<title>Navigate forwards out of a banner landmark</title>
<link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
<link rel="help" href="https://w3c.github.io/aria/#banner">

<script>
  var scripts = {
		setFocusOnBottomLink: function(testPageDocument){
			// sets focus on the 'Bottom' link
			testPageDocument.getElementById('bottom').focus();
		}
	};
</script>
<script type="module">
  import { initialize, verifyATBehavior, displayTestPageAndInstructions } from "../resources/aria-at-harness.mjs";

  new Promise((resolve) => {
    fetch('../support.json')
      .then(response => resolve(response.json()))
    })
  .then(supportJson => {
    const testJson = {
  "setup_script_description": "sets focus on the 'Bottom' link",
  "setupTestPage": "setFocusOnBottomLink",
  "applies_to": [
    "voiceover_macos"
  ],
  "mode": "interaction",
  "task": "navigate forwards out of a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Bottom' link, navigate to the 'Navigate backwards from here' link.",
  "output_assertions": [
    [
      "1",
      "Banner landmark boundary is conveyed"
    ],
    [
      "1",
      "Role 'link' is conveyed"
    ],
    [
      "1",
      "Name 'Navigate backwards from here' is conveyed"
    ]
  ]
};
    const commandJson = {
  "navigate forwards out of a banner landmark": {
    "reading": {
      "jaws": [ [ "DOWN" ], [ "U" ] ],
      "nvda": [ [ "DOWN" ], [ "U" ], [ "K" ] ]
    },
    "interaction": {
      "jaws": [ [ "TAB" ] ],
      "nvda": [ [ "TAB" ] ],
      "voiceover_macos": [
        [
          "CTRL_OPT_RIGHT,CTRL_OPT_RIGHT"
        ],
        [ "CTRL_OPT_CMD_L" ]
      ]
    }
  }
};
    initialize(supportJson, commandJson);
    verifyATBehavior(testJson);
    displayTestPageAndInstructions("reference/2021-10-24_135455/banner.setFocusOnBottomLink.html");
  });
</script>
  "
`;

exports[`V1 test format version creates build files for v1 test (banner) 50`] = `
"{
  "setup_script_description": "sets focus on the 'Bottom' link",
  "setupTestPage": "setFocusOnBottomLink",
  "applies_to": [
    "voiceover_macos"
  ],
  "mode": "interaction",
  "task": "navigate forwards out of a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Bottom' link, navigate to the 'Navigate backwards from here' link.",
  "output_assertions": [
    [
      "1",
      "Banner landmark boundary is conveyed"
    ],
    [
      "1",
      "Role 'link' is conveyed"
    ],
    [
      "1",
      "Name 'Navigate backwards from here' is conveyed"
    ]
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 51`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate backwards out of a banner landmark in reading mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-10-navigate-backwards-out-of-a-banner-landmark-reading-jaws.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-10-navigate-backwards-out-of-a-banner-landmark-reading-jaws.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 52`] = `
"{
  "info": {
    "testId": 10,
    "task": "navigate backwards out of a banner landmark",
    "title": "Navigate backwards out of a banner landmark in reading mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "jaws",
      "raw": "JAWS",
      "name": "JAWS"
    },
    "mode": "reading",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusOnTopLink.html",
    "setupScript": {
      "name": "setFocusOnTopLink",
      "description": "sets focus on the 'Top' link",
      "source": "// sets focus on the 'Top' link\\ntestPageDocument.getElementById('top').focus();\\n",
      "modulePath": "scripts/setFocusOnTopLink.module.js",
      "jsonpPath": "scripts/setFocusOnTopLink.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With the reading cursor on the 'Top' link, navigate to the 'Navigate forwards from here' link."
    ],
    "raw": "With the reading cursor on the 'Top' link, navigate to the 'Navigate forwards from here' link.",
    "mode": "Verify the Virtual Cursor is active by pressing Alt+Delete. If it is not, exit Forms Mode to activate the Virtual Cursor by pressing Escape."
  },
  "commands": [
    {
      "id": "UP",
      "keystroke": "Up Arrow",
      "keypresses": [
        {
          "id": "UP",
          "keystroke": "Up Arrow"
        }
      ]
    },
    {
      "id": "SHIFT_U",
      "keystroke": "Shift+U",
      "keypresses": [
        {
          "id": "SHIFT_U",
          "keystroke": "Shift+U"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Banner landmark boundary is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'link' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Navigate forwards from here' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 53`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate backwards out of a banner landmark in reading mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-10-navigate-backwards-out-of-a-banner-landmark-reading-nvda.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-10-navigate-backwards-out-of-a-banner-landmark-reading-nvda.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 54`] = `
"{
  "info": {
    "testId": 10,
    "task": "navigate backwards out of a banner landmark",
    "title": "Navigate backwards out of a banner landmark in reading mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "nvda",
      "raw": "NVDA",
      "name": "NVDA"
    },
    "mode": "reading",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusOnTopLink.html",
    "setupScript": {
      "name": "setFocusOnTopLink",
      "description": "sets focus on the 'Top' link",
      "source": "// sets focus on the 'Top' link\\ntestPageDocument.getElementById('top').focus();\\n",
      "modulePath": "scripts/setFocusOnTopLink.module.js",
      "jsonpPath": "scripts/setFocusOnTopLink.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With the reading cursor on the 'Top' link, navigate to the 'Navigate forwards from here' link."
    ],
    "raw": "With the reading cursor on the 'Top' link, navigate to the 'Navigate forwards from here' link.",
    "mode": "Ensure NVDA is in browse mode by pressing Escape. Note: This command has no effect if NVDA is already in browse mode."
  },
  "commands": [
    {
      "id": "UP",
      "keystroke": "Up Arrow",
      "keypresses": [
        {
          "id": "UP",
          "keystroke": "Up Arrow"
        }
      ]
    },
    {
      "id": "SHIFT_K",
      "keystroke": "Shift+K",
      "keypresses": [
        {
          "id": "SHIFT_K",
          "keystroke": "Shift+K"
        }
      ]
    },
    {
      "id": "SHIFT_U",
      "keystroke": "Shift+U",
      "keypresses": [
        {
          "id": "SHIFT_U",
          "keystroke": "Shift+U"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Banner landmark boundary is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'link' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Navigate forwards from here' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 55`] = `
"
<!DOCTYPE html>
<meta charset="utf-8">
<title>Navigate backwards out of a banner landmark in reading mode</title>
<link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
<link rel="help" href="https://w3c.github.io/aria/#banner">

<script>
  var scripts = {
		setFocusOnTopLink: function(testPageDocument){
			// sets focus on the 'Top' link
			testPageDocument.getElementById('top').focus();
		}
	};
</script>
<script type="module">
  import { initialize, verifyATBehavior, displayTestPageAndInstructions } from "../resources/aria-at-harness.mjs";

  new Promise((resolve) => {
    fetch('../support.json')
      .then(response => resolve(response.json()))
    })
  .then(supportJson => {
    const testJson = {
  "setup_script_description": "sets focus on the 'Top' link",
  "setupTestPage": "setFocusOnTopLink",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "reading",
  "task": "navigate backwards out of a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With the reading cursor on the 'Top' link, navigate to the 'Navigate forwards from here' link.",
  "output_assertions": [
    [
      "1",
      "Banner landmark boundary is conveyed"
    ],
    [
      "1",
      "Role 'link' is conveyed"
    ],
    [
      "1",
      "Name 'Navigate forwards from here' is conveyed"
    ]
  ]
};
    const commandJson = {
  "navigate backwards out of a banner landmark": {
    "reading": {
      "jaws": [ [ "UP" ], [ "SHIFT_U" ] ],
      "nvda": [
        [ "UP" ],
        [ "SHIFT_K" ],
        [ "SHIFT_U" ]
      ]
    },
    "interaction": {
      "jaws": [ [ "SHIFT_TAB" ] ],
      "nvda": [ [ "SHIFT_TAB" ] ],
      "voiceover_macos": [
        [
          "CTRL_OPT_LEFT,CTRL_OPT_LEFT"
        ],
        [ "SHIFT_CTRL_OPT_CMD_L" ]
      ]
    }
  }
};
    initialize(supportJson, commandJson);
    verifyATBehavior(testJson);
    displayTestPageAndInstructions("reference/2021-10-24_135455/banner.setFocusOnTopLink.html");
  });
</script>
  "
`;

exports[`V1 test format version creates build files for v1 test (banner) 56`] = `
"{
  "setup_script_description": "sets focus on the 'Top' link",
  "setupTestPage": "setFocusOnTopLink",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "reading",
  "task": "navigate backwards out of a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With the reading cursor on the 'Top' link, navigate to the 'Navigate forwards from here' link.",
  "output_assertions": [
    [
      "1",
      "Banner landmark boundary is conveyed"
    ],
    [
      "1",
      "Role 'link' is conveyed"
    ],
    [
      "1",
      "Name 'Navigate forwards from here' is conveyed"
    ]
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 57`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate backwards out of a banner landmark in interaction mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-11-navigate-backwards-out-of-a-banner-landmark-interaction-jaws.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-11-navigate-backwards-out-of-a-banner-landmark-interaction-jaws.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 58`] = `
"{
  "info": {
    "testId": 11,
    "task": "navigate backwards out of a banner landmark",
    "title": "Navigate backwards out of a banner landmark in interaction mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "jaws",
      "raw": "JAWS",
      "name": "JAWS"
    },
    "mode": "interaction",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusOnTopLink.html",
    "setupScript": {
      "name": "setFocusOnTopLink",
      "description": "sets focus on the 'Top' link",
      "source": "// sets focus on the 'Top' link\\ntestPageDocument.getElementById('top').focus();\\n",
      "modulePath": "scripts/setFocusOnTopLink.module.js",
      "jsonpPath": "scripts/setFocusOnTopLink.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With focus on the 'Top' link, navigate to the 'Navigate forwards from here' link."
    ],
    "raw": "With focus on the 'Top' link, navigate to the 'Navigate forwards from here' link.",
    "mode": "Verify the PC Cursor is active by pressing Alt+Delete. If it is not, turn off the Virtual Cursor by pressing Insert+Z."
  },
  "commands": [
    {
      "id": "SHIFT_TAB",
      "keystroke": "Shift+Tab",
      "keypresses": [
        {
          "id": "SHIFT_TAB",
          "keystroke": "Shift+Tab"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Banner landmark boundary is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'link' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Navigate forwards from here' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 59`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate backwards out of a banner landmark in interaction mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-11-navigate-backwards-out-of-a-banner-landmark-interaction-nvda.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-11-navigate-backwards-out-of-a-banner-landmark-interaction-nvda.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 60`] = `
"{
  "info": {
    "testId": 11,
    "task": "navigate backwards out of a banner landmark",
    "title": "Navigate backwards out of a banner landmark in interaction mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "nvda",
      "raw": "NVDA",
      "name": "NVDA"
    },
    "mode": "interaction",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusOnTopLink.html",
    "setupScript": {
      "name": "setFocusOnTopLink",
      "description": "sets focus on the 'Top' link",
      "source": "// sets focus on the 'Top' link\\ntestPageDocument.getElementById('top').focus();\\n",
      "modulePath": "scripts/setFocusOnTopLink.module.js",
      "jsonpPath": "scripts/setFocusOnTopLink.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With focus on the 'Top' link, navigate to the 'Navigate forwards from here' link."
    ],
    "raw": "With focus on the 'Top' link, navigate to the 'Navigate forwards from here' link.",
    "mode": "If NVDA did not make the focus mode sound when the test page loaded, press Insert+Space to turn focus mode on."
  },
  "commands": [
    {
      "id": "SHIFT_TAB",
      "keystroke": "Shift+Tab",
      "keypresses": [
        {
          "id": "SHIFT_TAB",
          "keystroke": "Shift+Tab"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Banner landmark boundary is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'link' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Navigate forwards from here' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 61`] = `
"
<!DOCTYPE html>
<meta charset="utf-8">
<title>Navigate backwards out of a banner landmark in interaction mode</title>
<link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
<link rel="help" href="https://w3c.github.io/aria/#banner">

<script>
  var scripts = {
		setFocusOnTopLink: function(testPageDocument){
			// sets focus on the 'Top' link
			testPageDocument.getElementById('top').focus();
		}
	};
</script>
<script type="module">
  import { initialize, verifyATBehavior, displayTestPageAndInstructions } from "../resources/aria-at-harness.mjs";

  new Promise((resolve) => {
    fetch('../support.json')
      .then(response => resolve(response.json()))
    })
  .then(supportJson => {
    const testJson = {
  "setup_script_description": "sets focus on the 'Top' link",
  "setupTestPage": "setFocusOnTopLink",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "interaction",
  "task": "navigate backwards out of a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Top' link, navigate to the 'Navigate forwards from here' link.",
  "output_assertions": [
    [
      "1",
      "Banner landmark boundary is conveyed"
    ],
    [
      "1",
      "Role 'link' is conveyed"
    ],
    [
      "1",
      "Name 'Navigate forwards from here' is conveyed"
    ]
  ]
};
    const commandJson = {
  "navigate backwards out of a banner landmark": {
    "reading": {
      "jaws": [ [ "UP" ], [ "SHIFT_U" ] ],
      "nvda": [
        [ "UP" ],
        [ "SHIFT_K" ],
        [ "SHIFT_U" ]
      ]
    },
    "interaction": {
      "jaws": [ [ "SHIFT_TAB" ] ],
      "nvda": [ [ "SHIFT_TAB" ] ],
      "voiceover_macos": [
        [
          "CTRL_OPT_LEFT,CTRL_OPT_LEFT"
        ],
        [ "SHIFT_CTRL_OPT_CMD_L" ]
      ]
    }
  }
};
    initialize(supportJson, commandJson);
    verifyATBehavior(testJson);
    displayTestPageAndInstructions("reference/2021-10-24_135455/banner.setFocusOnTopLink.html");
  });
</script>
  "
`;

exports[`V1 test format version creates build files for v1 test (banner) 62`] = `
"{
  "setup_script_description": "sets focus on the 'Top' link",
  "setupTestPage": "setFocusOnTopLink",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "interaction",
  "task": "navigate backwards out of a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Top' link, navigate to the 'Navigate forwards from here' link.",
  "output_assertions": [
    [
      "1",
      "Banner landmark boundary is conveyed"
    ],
    [
      "1",
      "Role 'link' is conveyed"
    ],
    [
      "1",
      "Name 'Navigate forwards from here' is conveyed"
    ]
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 63`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate backwards out of a banner landmark</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-12-navigate-backwards-out-of-a-banner-landmark-interaction-voiceover_macos.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-12-navigate-backwards-out-of-a-banner-landmark-interaction-voiceover_macos.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 64`] = `
"{
  "info": {
    "testId": 12,
    "task": "navigate backwards out of a banner landmark",
    "title": "Navigate backwards out of a banner landmark",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "voiceover_macos",
      "raw": "VOICEOVER_MACOS",
      "name": "VoiceOver for macOS"
    },
    "mode": "interaction",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusOnTopLink.html",
    "setupScript": {
      "name": "setFocusOnTopLink",
      "description": "sets focus on the 'Top' link",
      "source": "// sets focus on the 'Top' link\\ntestPageDocument.getElementById('top').focus();\\n",
      "modulePath": "scripts/setFocusOnTopLink.module.js",
      "jsonpPath": "scripts/setFocusOnTopLink.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With focus on the 'Top' link, navigate to the 'Navigate forwards from here' link."
    ],
    "raw": "With focus on the 'Top' link, navigate to the 'Navigate forwards from here' link.",
    "mode": "Toggle Quick Nav OFF by pressing the Left Arrow and Right Arrow keys at the same time."
  },
  "commands": [
    {
      "id": "CTRL_OPT_LEFT,CTRL_OPT_LEFT",
      "keystroke": "Ctrl+Option+Left, then Ctrl+Option+Left",
      "keypresses": [
        {
          "id": "CTRL_OPT_LEFT",
          "keystroke": "Ctrl+Option+Left"
        },
        {
          "id": "CTRL_OPT_LEFT",
          "keystroke": "Ctrl+Option+Left"
        }
      ]
    },
    {
      "id": "SHIFT_CTRL_OPT_CMD_L",
      "keystroke": "Shift+Control+Option+Command+L",
      "keypresses": [
        {
          "id": "SHIFT_CTRL_OPT_CMD_L",
          "keystroke": "Shift+Control+Option+Command+L"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Banner landmark boundary is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'link' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Navigate forwards from here' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 65`] = `
"
<!DOCTYPE html>
<meta charset="utf-8">
<title>Navigate backwards out of a banner landmark</title>
<link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
<link rel="help" href="https://w3c.github.io/aria/#banner">

<script>
  var scripts = {
		setFocusOnTopLink: function(testPageDocument){
			// sets focus on the 'Top' link
			testPageDocument.getElementById('top').focus();
		}
	};
</script>
<script type="module">
  import { initialize, verifyATBehavior, displayTestPageAndInstructions } from "../resources/aria-at-harness.mjs";

  new Promise((resolve) => {
    fetch('../support.json')
      .then(response => resolve(response.json()))
    })
  .then(supportJson => {
    const testJson = {
  "setup_script_description": "sets focus on the 'Top' link",
  "setupTestPage": "setFocusOnTopLink",
  "applies_to": [
    "voiceover_macos"
  ],
  "mode": "interaction",
  "task": "navigate backwards out of a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Top' link, navigate to the 'Navigate forwards from here' link.",
  "output_assertions": [
    [
      "1",
      "Banner landmark boundary is conveyed"
    ],
    [
      "1",
      "Role 'link' is conveyed"
    ],
    [
      "1",
      "Name 'Navigate forwards from here' is conveyed"
    ]
  ]
};
    const commandJson = {
  "navigate backwards out of a banner landmark": {
    "reading": {
      "jaws": [ [ "UP" ], [ "SHIFT_U" ] ],
      "nvda": [
        [ "UP" ],
        [ "SHIFT_K" ],
        [ "SHIFT_U" ]
      ]
    },
    "interaction": {
      "jaws": [ [ "SHIFT_TAB" ] ],
      "nvda": [ [ "SHIFT_TAB" ] ],
      "voiceover_macos": [
        [
          "CTRL_OPT_LEFT,CTRL_OPT_LEFT"
        ],
        [ "SHIFT_CTRL_OPT_CMD_L" ]
      ]
    }
  }
};
    initialize(supportJson, commandJson);
    verifyATBehavior(testJson);
    displayTestPageAndInstructions("reference/2021-10-24_135455/banner.setFocusOnTopLink.html");
  });
</script>
  "
`;

exports[`V1 test format version creates build files for v1 test (banner) 66`] = `
"{
  "setup_script_description": "sets focus on the 'Top' link",
  "setupTestPage": "setFocusOnTopLink",
  "applies_to": [
    "voiceover_macos"
  ],
  "mode": "interaction",
  "task": "navigate backwards out of a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Top' link, navigate to the 'Navigate forwards from here' link.",
  "output_assertions": [
    [
      "1",
      "Banner landmark boundary is conveyed"
    ],
    [
      "1",
      "Role 'link' is conveyed"
    ],
    [
      "1",
      "Name 'Navigate forwards from here' is conveyed"
    ]
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 67`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate forwards to a button inside a banner landmark in reading mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="help" href="https://w3c.github.io/aria/#aria-haspopup">
    <link rel="help" href="https://w3c.github.io/aria/#aria-expanded">
    <link rel="preload" href="test-13-navigate-forwards-to-a-button-inside-a-banner-landmark-reading-jaws.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-13-navigate-forwards-to-a-button-inside-a-banner-landmark-reading-jaws.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 68`] = `
"{
  "info": {
    "testId": 13,
    "task": "navigate forwards to a button inside a banner landmark",
    "title": "Navigate forwards to a button inside a banner landmark in reading mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      },
      {
        "refId": "aria-haspopup",
        "value": "https://w3c.github.io/aria/#aria-haspopup"
      },
      {
        "refId": "aria-expanded",
        "value": "https://w3c.github.io/aria/#aria-expanded"
      }
    ]
  },
  "target": {
    "at": {
      "key": "jaws",
      "raw": "JAWS",
      "name": "JAWS"
    },
    "mode": "reading",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusBeforeBannerAndHideTopLink.html",
    "setupScript": {
      "name": "setFocusBeforeBannerAndHideTopLink",
      "description": "sets focus on a link before the banner landmark, and hides the first link inside the landmark region",
      "source": "// sets focus on a link before the banner landmark, and hides the first link inside the landmark region\\ntestPageDocument.getElementById('top').setAttribute('hidden', '');\\ntestPageDocument.getElementById('beforelink').focus();\\n",
      "modulePath": "scripts/setFocusBeforeBannerAndHideTopLink.module.js",
      "jsonpPath": "scripts/setFocusBeforeBannerAndHideTopLink.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With the reading cursor on the 'Navigate forwards from here' link, navigate to the 'Skip To Content' button."
    ],
    "raw": "With the reading cursor on the 'Navigate forwards from here' link, navigate to the 'Skip To Content' button.",
    "mode": "Verify the Virtual Cursor is active by pressing Alt+Delete. If it is not, exit Forms Mode to activate the Virtual Cursor by pressing Escape."
  },
  "commands": [
    {
      "id": "B",
      "keystroke": "B",
      "keypresses": [
        {
          "id": "B",
          "keystroke": "B"
        }
      ]
    },
    {
      "id": "DOWN",
      "keystroke": "Down Arrow",
      "keypresses": [
        {
          "id": "DOWN",
          "keystroke": "Down Arrow"
        }
      ]
    },
    {
      "id": "TAB",
      "keystroke": "Tab",
      "keypresses": [
        {
          "id": "TAB",
          "keystroke": "Tab"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'menu button' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Skip To Content' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "State 'collapsed' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Access key '0' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 69`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate forwards to a button inside a banner landmark in reading mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="help" href="https://w3c.github.io/aria/#aria-haspopup">
    <link rel="help" href="https://w3c.github.io/aria/#aria-expanded">
    <link rel="preload" href="test-13-navigate-forwards-to-a-button-inside-a-banner-landmark-reading-nvda.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-13-navigate-forwards-to-a-button-inside-a-banner-landmark-reading-nvda.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 70`] = `
"{
  "info": {
    "testId": 13,
    "task": "navigate forwards to a button inside a banner landmark",
    "title": "Navigate forwards to a button inside a banner landmark in reading mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      },
      {
        "refId": "aria-haspopup",
        "value": "https://w3c.github.io/aria/#aria-haspopup"
      },
      {
        "refId": "aria-expanded",
        "value": "https://w3c.github.io/aria/#aria-expanded"
      }
    ]
  },
  "target": {
    "at": {
      "key": "nvda",
      "raw": "NVDA",
      "name": "NVDA"
    },
    "mode": "reading",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusBeforeBannerAndHideTopLink.html",
    "setupScript": {
      "name": "setFocusBeforeBannerAndHideTopLink",
      "description": "sets focus on a link before the banner landmark, and hides the first link inside the landmark region",
      "source": "// sets focus on a link before the banner landmark, and hides the first link inside the landmark region\\ntestPageDocument.getElementById('top').setAttribute('hidden', '');\\ntestPageDocument.getElementById('beforelink').focus();\\n",
      "modulePath": "scripts/setFocusBeforeBannerAndHideTopLink.module.js",
      "jsonpPath": "scripts/setFocusBeforeBannerAndHideTopLink.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With the reading cursor on the 'Navigate forwards from here' link, navigate to the 'Skip To Content' button."
    ],
    "raw": "With the reading cursor on the 'Navigate forwards from here' link, navigate to the 'Skip To Content' button.",
    "mode": "Ensure NVDA is in browse mode by pressing Escape. Note: This command has no effect if NVDA is already in browse mode."
  },
  "commands": [
    {
      "id": "B",
      "keystroke": "B",
      "keypresses": [
        {
          "id": "B",
          "keystroke": "B"
        }
      ]
    },
    {
      "id": "DOWN",
      "keystroke": "Down Arrow",
      "keypresses": [
        {
          "id": "DOWN",
          "keystroke": "Down Arrow"
        }
      ]
    },
    {
      "id": "TAB",
      "keystroke": "Tab",
      "keypresses": [
        {
          "id": "TAB",
          "keystroke": "Tab"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'menu button' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Skip To Content' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "State 'collapsed' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Access key '0' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 71`] = `
"
<!DOCTYPE html>
<meta charset="utf-8">
<title>Navigate forwards to a button inside a banner landmark in reading mode</title>
<link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
<link rel="help" href="https://w3c.github.io/aria/#banner">
<link rel="help" href="https://w3c.github.io/aria/#aria-haspopup">
<link rel="help" href="https://w3c.github.io/aria/#aria-expanded">

<script>
  var scripts = {
		setFocusBeforeBannerAndHideTopLink: function(testPageDocument){
			// sets focus on a link before the banner landmark, and hides the first link inside the landmark region
			testPageDocument.getElementById('top').setAttribute('hidden', '');
			testPageDocument.getElementById('beforelink').focus();
		}
	};
</script>
<script type="module">
  import { initialize, verifyATBehavior, displayTestPageAndInstructions } from "../resources/aria-at-harness.mjs";

  new Promise((resolve) => {
    fetch('../support.json')
      .then(response => resolve(response.json()))
    })
  .then(supportJson => {
    const testJson = {
  "setup_script_description": "sets focus on a link before the banner landmark, and hides the first link inside the landmark region",
  "setupTestPage": "setFocusBeforeBannerAndHideTopLink",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "reading",
  "task": "navigate forwards to a button inside a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With the reading cursor on the 'Navigate forwards from here' link, navigate to the 'Skip To Content' button.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'menu button' is conveyed"
    ],
    [
      "1",
      "Name 'Skip To Content' is conveyed"
    ],
    [
      "1",
      "State 'collapsed' is conveyed"
    ],
    [
      "1",
      "Access key '0' is conveyed"
    ]
  ]
};
    const commandJson = {
  "navigate forwards to a button inside a banner landmark": {
    "reading": {
      "jaws": [
        [ "B" ],
        [ "DOWN" ],
        [ "TAB" ]
      ],
      "nvda": [
        [ "B" ],
        [ "DOWN" ],
        [ "TAB" ]
      ]
    },
    "interaction": {
      "jaws": [ [ "TAB" ] ],
      "nvda": [ [ "TAB" ] ],
      "voiceover_macos": [
        [
          "CTRL_OPT_RIGHT,CTRL_OPT_RIGHT"
        ],
        [ "CTRL_OPT_CMD_J" ],
        [ "TAB" ]
      ]
    }
  }
};
    initialize(supportJson, commandJson);
    verifyATBehavior(testJson);
    displayTestPageAndInstructions("reference/2021-10-24_135455/banner.setFocusBeforeBannerAndHideTopLink.html");
  });
</script>
  "
`;

exports[`V1 test format version creates build files for v1 test (banner) 72`] = `
"{
  "setup_script_description": "sets focus on a link before the banner landmark, and hides the first link inside the landmark region",
  "setupTestPage": "setFocusBeforeBannerAndHideTopLink",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "reading",
  "task": "navigate forwards to a button inside a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With the reading cursor on the 'Navigate forwards from here' link, navigate to the 'Skip To Content' button.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'menu button' is conveyed"
    ],
    [
      "1",
      "Name 'Skip To Content' is conveyed"
    ],
    [
      "1",
      "State 'collapsed' is conveyed"
    ],
    [
      "1",
      "Access key '0' is conveyed"
    ]
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 73`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate forwards to a button inside a banner landmark in interaction mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="help" href="https://w3c.github.io/aria/#aria-haspopup">
    <link rel="help" href="https://w3c.github.io/aria/#aria-expanded">
    <link rel="preload" href="test-14-navigate-forwards-to-a-button-inside-a-banner-landmark-interaction-jaws.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-14-navigate-forwards-to-a-button-inside-a-banner-landmark-interaction-jaws.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 74`] = `
"{
  "info": {
    "testId": 14,
    "task": "navigate forwards to a button inside a banner landmark",
    "title": "Navigate forwards to a button inside a banner landmark in interaction mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      },
      {
        "refId": "aria-haspopup",
        "value": "https://w3c.github.io/aria/#aria-haspopup"
      },
      {
        "refId": "aria-expanded",
        "value": "https://w3c.github.io/aria/#aria-expanded"
      }
    ]
  },
  "target": {
    "at": {
      "key": "jaws",
      "raw": "JAWS",
      "name": "JAWS"
    },
    "mode": "interaction",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusBeforeBannerAndHideTopLink.html",
    "setupScript": {
      "name": "setFocusBeforeBannerAndHideTopLink",
      "description": "sets focus on a link before the banner landmark, and hides the first link inside the landmark region",
      "source": "// sets focus on a link before the banner landmark, and hides the first link inside the landmark region\\ntestPageDocument.getElementById('top').setAttribute('hidden', '');\\ntestPageDocument.getElementById('beforelink').focus();\\n",
      "modulePath": "scripts/setFocusBeforeBannerAndHideTopLink.module.js",
      "jsonpPath": "scripts/setFocusBeforeBannerAndHideTopLink.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With focus on the 'Navigate forwards from here' link, navigate to the 'Skip To Content' button."
    ],
    "raw": "With focus on the 'Navigate forwards from here' link, navigate to the 'Skip To Content' button.",
    "mode": "Verify the PC Cursor is active by pressing Alt+Delete. If it is not, turn off the Virtual Cursor by pressing Insert+Z."
  },
  "commands": [
    {
      "id": "TAB",
      "keystroke": "Tab",
      "keypresses": [
        {
          "id": "TAB",
          "keystroke": "Tab"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'menu button' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Skip To Content' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "State 'collapsed' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Access key '0' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 75`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate forwards to a button inside a banner landmark in interaction mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="help" href="https://w3c.github.io/aria/#aria-haspopup">
    <link rel="help" href="https://w3c.github.io/aria/#aria-expanded">
    <link rel="preload" href="test-14-navigate-forwards-to-a-button-inside-a-banner-landmark-interaction-nvda.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-14-navigate-forwards-to-a-button-inside-a-banner-landmark-interaction-nvda.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 76`] = `
"{
  "info": {
    "testId": 14,
    "task": "navigate forwards to a button inside a banner landmark",
    "title": "Navigate forwards to a button inside a banner landmark in interaction mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      },
      {
        "refId": "aria-haspopup",
        "value": "https://w3c.github.io/aria/#aria-haspopup"
      },
      {
        "refId": "aria-expanded",
        "value": "https://w3c.github.io/aria/#aria-expanded"
      }
    ]
  },
  "target": {
    "at": {
      "key": "nvda",
      "raw": "NVDA",
      "name": "NVDA"
    },
    "mode": "interaction",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusBeforeBannerAndHideTopLink.html",
    "setupScript": {
      "name": "setFocusBeforeBannerAndHideTopLink",
      "description": "sets focus on a link before the banner landmark, and hides the first link inside the landmark region",
      "source": "// sets focus on a link before the banner landmark, and hides the first link inside the landmark region\\ntestPageDocument.getElementById('top').setAttribute('hidden', '');\\ntestPageDocument.getElementById('beforelink').focus();\\n",
      "modulePath": "scripts/setFocusBeforeBannerAndHideTopLink.module.js",
      "jsonpPath": "scripts/setFocusBeforeBannerAndHideTopLink.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With focus on the 'Navigate forwards from here' link, navigate to the 'Skip To Content' button."
    ],
    "raw": "With focus on the 'Navigate forwards from here' link, navigate to the 'Skip To Content' button.",
    "mode": "If NVDA did not make the focus mode sound when the test page loaded, press Insert+Space to turn focus mode on."
  },
  "commands": [
    {
      "id": "TAB",
      "keystroke": "Tab",
      "keypresses": [
        {
          "id": "TAB",
          "keystroke": "Tab"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'menu button' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Skip To Content' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "State 'collapsed' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Access key '0' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 77`] = `
"
<!DOCTYPE html>
<meta charset="utf-8">
<title>Navigate forwards to a button inside a banner landmark in interaction mode</title>
<link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
<link rel="help" href="https://w3c.github.io/aria/#banner">
<link rel="help" href="https://w3c.github.io/aria/#aria-haspopup">
<link rel="help" href="https://w3c.github.io/aria/#aria-expanded">

<script>
  var scripts = {
		setFocusBeforeBannerAndHideTopLink: function(testPageDocument){
			// sets focus on a link before the banner landmark, and hides the first link inside the landmark region
			testPageDocument.getElementById('top').setAttribute('hidden', '');
			testPageDocument.getElementById('beforelink').focus();
		}
	};
</script>
<script type="module">
  import { initialize, verifyATBehavior, displayTestPageAndInstructions } from "../resources/aria-at-harness.mjs";

  new Promise((resolve) => {
    fetch('../support.json')
      .then(response => resolve(response.json()))
    })
  .then(supportJson => {
    const testJson = {
  "setup_script_description": "sets focus on a link before the banner landmark, and hides the first link inside the landmark region",
  "setupTestPage": "setFocusBeforeBannerAndHideTopLink",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "interaction",
  "task": "navigate forwards to a button inside a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Navigate forwards from here' link, navigate to the 'Skip To Content' button.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'menu button' is conveyed"
    ],
    [
      "1",
      "Name 'Skip To Content' is conveyed"
    ],
    [
      "1",
      "State 'collapsed' is conveyed"
    ],
    [
      "1",
      "Access key '0' is conveyed"
    ]
  ]
};
    const commandJson = {
  "navigate forwards to a button inside a banner landmark": {
    "reading": {
      "jaws": [
        [ "B" ],
        [ "DOWN" ],
        [ "TAB" ]
      ],
      "nvda": [
        [ "B" ],
        [ "DOWN" ],
        [ "TAB" ]
      ]
    },
    "interaction": {
      "jaws": [ [ "TAB" ] ],
      "nvda": [ [ "TAB" ] ],
      "voiceover_macos": [
        [
          "CTRL_OPT_RIGHT,CTRL_OPT_RIGHT"
        ],
        [ "CTRL_OPT_CMD_J" ],
        [ "TAB" ]
      ]
    }
  }
};
    initialize(supportJson, commandJson);
    verifyATBehavior(testJson);
    displayTestPageAndInstructions("reference/2021-10-24_135455/banner.setFocusBeforeBannerAndHideTopLink.html");
  });
</script>
  "
`;

exports[`V1 test format version creates build files for v1 test (banner) 78`] = `
"{
  "setup_script_description": "sets focus on a link before the banner landmark, and hides the first link inside the landmark region",
  "setupTestPage": "setFocusBeforeBannerAndHideTopLink",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "interaction",
  "task": "navigate forwards to a button inside a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Navigate forwards from here' link, navigate to the 'Skip To Content' button.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'menu button' is conveyed"
    ],
    [
      "1",
      "Name 'Skip To Content' is conveyed"
    ],
    [
      "1",
      "State 'collapsed' is conveyed"
    ],
    [
      "1",
      "Access key '0' is conveyed"
    ]
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 79`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate forwards to a button inside a banner landmark</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="help" href="https://w3c.github.io/aria/#aria-haspopup">
    <link rel="help" href="https://w3c.github.io/aria/#aria-expanded">
    <link rel="preload" href="test-15-navigate-forwards-to-a-button-inside-a-banner-landmark-interaction-voiceover_macos.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-15-navigate-forwards-to-a-button-inside-a-banner-landmark-interaction-voiceover_macos.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 80`] = `
"{
  "info": {
    "testId": 15,
    "task": "navigate forwards to a button inside a banner landmark",
    "title": "Navigate forwards to a button inside a banner landmark",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      },
      {
        "refId": "aria-haspopup",
        "value": "https://w3c.github.io/aria/#aria-haspopup"
      },
      {
        "refId": "aria-expanded",
        "value": "https://w3c.github.io/aria/#aria-expanded"
      }
    ]
  },
  "target": {
    "at": {
      "key": "voiceover_macos",
      "raw": "VOICEOVER_MACOS",
      "name": "VoiceOver for macOS"
    },
    "mode": "interaction",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusBeforeBannerAndHideTopLink.html",
    "setupScript": {
      "name": "setFocusBeforeBannerAndHideTopLink",
      "description": "sets focus on a link before the banner landmark, and hides the first link inside the landmark region",
      "source": "// sets focus on a link before the banner landmark, and hides the first link inside the landmark region\\ntestPageDocument.getElementById('top').setAttribute('hidden', '');\\ntestPageDocument.getElementById('beforelink').focus();\\n",
      "modulePath": "scripts/setFocusBeforeBannerAndHideTopLink.module.js",
      "jsonpPath": "scripts/setFocusBeforeBannerAndHideTopLink.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With focus on the 'Navigate forwards from here' link, navigate to the 'Skip To Content' button."
    ],
    "raw": "With focus on the 'Navigate forwards from here' link, navigate to the 'Skip To Content' button.",
    "mode": "Toggle Quick Nav OFF by pressing the Left Arrow and Right Arrow keys at the same time."
  },
  "commands": [
    {
      "id": "CTRL_OPT_RIGHT,CTRL_OPT_RIGHT",
      "keystroke": "Control+Option+Right, then Control+Option+Right",
      "keypresses": [
        {
          "id": "CTRL_OPT_RIGHT",
          "keystroke": "Control+Option+Right"
        },
        {
          "id": "CTRL_OPT_RIGHT",
          "keystroke": "Control+Option+Right"
        }
      ]
    },
    {
      "id": "CTRL_OPT_CMD_J",
      "keystroke": "Control+Option+Command+J",
      "keypresses": [
        {
          "id": "CTRL_OPT_CMD_J",
          "keystroke": "Control+Option+Command+J"
        }
      ]
    },
    {
      "id": "TAB",
      "keystroke": "Tab",
      "keypresses": [
        {
          "id": "TAB",
          "keystroke": "Tab"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'menu button' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Skip To Content' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "State 'collapsed' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Access key '0' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 81`] = `
"
<!DOCTYPE html>
<meta charset="utf-8">
<title>Navigate forwards to a button inside a banner landmark</title>
<link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
<link rel="help" href="https://w3c.github.io/aria/#banner">
<link rel="help" href="https://w3c.github.io/aria/#aria-haspopup">
<link rel="help" href="https://w3c.github.io/aria/#aria-expanded">

<script>
  var scripts = {
		setFocusBeforeBannerAndHideTopLink: function(testPageDocument){
			// sets focus on a link before the banner landmark, and hides the first link inside the landmark region
			testPageDocument.getElementById('top').setAttribute('hidden', '');
			testPageDocument.getElementById('beforelink').focus();
		}
	};
</script>
<script type="module">
  import { initialize, verifyATBehavior, displayTestPageAndInstructions } from "../resources/aria-at-harness.mjs";

  new Promise((resolve) => {
    fetch('../support.json')
      .then(response => resolve(response.json()))
    })
  .then(supportJson => {
    const testJson = {
  "setup_script_description": "sets focus on a link before the banner landmark, and hides the first link inside the landmark region",
  "setupTestPage": "setFocusBeforeBannerAndHideTopLink",
  "applies_to": [
    "voiceover_macos"
  ],
  "mode": "interaction",
  "task": "navigate forwards to a button inside a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Navigate forwards from here' link, navigate to the 'Skip To Content' button.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'menu button' is conveyed"
    ],
    [
      "1",
      "Name 'Skip To Content' is conveyed"
    ],
    [
      "1",
      "State 'collapsed' is conveyed"
    ],
    [
      "1",
      "Access key '0' is conveyed"
    ]
  ]
};
    const commandJson = {
  "navigate forwards to a button inside a banner landmark": {
    "reading": {
      "jaws": [
        [ "B" ],
        [ "DOWN" ],
        [ "TAB" ]
      ],
      "nvda": [
        [ "B" ],
        [ "DOWN" ],
        [ "TAB" ]
      ]
    },
    "interaction": {
      "jaws": [ [ "TAB" ] ],
      "nvda": [ [ "TAB" ] ],
      "voiceover_macos": [
        [
          "CTRL_OPT_RIGHT,CTRL_OPT_RIGHT"
        ],
        [ "CTRL_OPT_CMD_J" ],
        [ "TAB" ]
      ]
    }
  }
};
    initialize(supportJson, commandJson);
    verifyATBehavior(testJson);
    displayTestPageAndInstructions("reference/2021-10-24_135455/banner.setFocusBeforeBannerAndHideTopLink.html");
  });
</script>
  "
`;

exports[`V1 test format version creates build files for v1 test (banner) 82`] = `
"{
  "setup_script_description": "sets focus on a link before the banner landmark, and hides the first link inside the landmark region",
  "setupTestPage": "setFocusBeforeBannerAndHideTopLink",
  "applies_to": [
    "voiceover_macos"
  ],
  "mode": "interaction",
  "task": "navigate forwards to a button inside a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Navigate forwards from here' link, navigate to the 'Skip To Content' button.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'menu button' is conveyed"
    ],
    [
      "1",
      "Name 'Skip To Content' is conveyed"
    ],
    [
      "1",
      "State 'collapsed' is conveyed"
    ],
    [
      "1",
      "Access key '0' is conveyed"
    ]
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 83`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate backwards to a button inside a banner landmark in reading mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="help" href="https://w3c.github.io/aria/#aria-describedby">
    <link rel="preload" href="test-16-navigate-backwards-to-a-button-inside-a-banner-landmark-reading-jaws.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-16-navigate-backwards-to-a-button-inside-a-banner-landmark-reading-jaws.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 84`] = `
"{
  "info": {
    "testId": 16,
    "task": "navigate backwards to a button inside a banner landmark",
    "title": "Navigate backwards to a button inside a banner landmark in reading mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      },
      {
        "refId": "aria-describedby",
        "value": "https://w3c.github.io/aria/#aria-describedby"
      }
    ]
  },
  "target": {
    "at": {
      "key": "jaws",
      "raw": "JAWS",
      "name": "JAWS"
    },
    "mode": "reading",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusAfterBannerAndHideBottomLink.html",
    "setupScript": {
      "name": "setFocusAfterBannerAndHideBottomLink",
      "description": "sets focus on a link after the banner landmark, and hides the last link inside the landmark region",
      "source": "// sets focus on a link after the banner landmark, and hides the last link inside the landmark region\\ntestPageDocument.getElementById('bottom').setAttribute('hidden', '');\\ntestPageDocument.getElementById('afterlink').focus();\\n",
      "modulePath": "scripts/setFocusAfterBannerAndHideBottomLink.module.js",
      "jsonpPath": "scripts/setFocusAfterBannerAndHideBottomLink.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With the reading cursor on the 'Navigate backwards from here' link, navigate to the 'Show Headings' button."
    ],
    "raw": "With the reading cursor on the 'Navigate backwards from here' link, navigate to the 'Show Headings' button.",
    "mode": "Verify the Virtual Cursor is active by pressing Alt+Delete. If it is not, exit Forms Mode to activate the Virtual Cursor by pressing Escape."
  },
  "commands": [
    {
      "id": "UP",
      "keystroke": "Up Arrow",
      "keypresses": [
        {
          "id": "UP",
          "keystroke": "Up Arrow"
        }
      ]
    },
    {
      "id": "SHIFT_B",
      "keystroke": "Shift+B",
      "keypresses": [
        {
          "id": "SHIFT_B",
          "keystroke": "Shift+B"
        }
      ]
    },
    {
      "id": "SHIFT_TAB",
      "keystroke": "Shift+Tab",
      "keypresses": [
        {
          "id": "SHIFT_TAB",
          "keystroke": "Shift+Tab"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'button' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Show Headings' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Button description is conveyed as: 'Visually outline the landmarks and/or headings on the page'"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 85`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate backwards to a button inside a banner landmark in reading mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="help" href="https://w3c.github.io/aria/#aria-describedby">
    <link rel="preload" href="test-16-navigate-backwards-to-a-button-inside-a-banner-landmark-reading-nvda.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-16-navigate-backwards-to-a-button-inside-a-banner-landmark-reading-nvda.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 86`] = `
"{
  "info": {
    "testId": 16,
    "task": "navigate backwards to a button inside a banner landmark",
    "title": "Navigate backwards to a button inside a banner landmark in reading mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      },
      {
        "refId": "aria-describedby",
        "value": "https://w3c.github.io/aria/#aria-describedby"
      }
    ]
  },
  "target": {
    "at": {
      "key": "nvda",
      "raw": "NVDA",
      "name": "NVDA"
    },
    "mode": "reading",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusAfterBannerAndHideBottomLink.html",
    "setupScript": {
      "name": "setFocusAfterBannerAndHideBottomLink",
      "description": "sets focus on a link after the banner landmark, and hides the last link inside the landmark region",
      "source": "// sets focus on a link after the banner landmark, and hides the last link inside the landmark region\\ntestPageDocument.getElementById('bottom').setAttribute('hidden', '');\\ntestPageDocument.getElementById('afterlink').focus();\\n",
      "modulePath": "scripts/setFocusAfterBannerAndHideBottomLink.module.js",
      "jsonpPath": "scripts/setFocusAfterBannerAndHideBottomLink.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With the reading cursor on the 'Navigate backwards from here' link, navigate to the 'Show Headings' button."
    ],
    "raw": "With the reading cursor on the 'Navigate backwards from here' link, navigate to the 'Show Headings' button.",
    "mode": "Ensure NVDA is in browse mode by pressing Escape. Note: This command has no effect if NVDA is already in browse mode."
  },
  "commands": [
    {
      "id": "UP",
      "keystroke": "Up Arrow",
      "keypresses": [
        {
          "id": "UP",
          "keystroke": "Up Arrow"
        }
      ]
    },
    {
      "id": "SHIFT_B",
      "keystroke": "Shift+B",
      "keypresses": [
        {
          "id": "SHIFT_B",
          "keystroke": "Shift+B"
        }
      ]
    },
    {
      "id": "SHIFT_TAB",
      "keystroke": "Shift+Tab",
      "keypresses": [
        {
          "id": "SHIFT_TAB",
          "keystroke": "Shift+Tab"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'button' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Show Headings' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Button description is conveyed as: 'Visually outline the landmarks and/or headings on the page'"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 87`] = `
"
<!DOCTYPE html>
<meta charset="utf-8">
<title>Navigate backwards to a button inside a banner landmark in reading mode</title>
<link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
<link rel="help" href="https://w3c.github.io/aria/#banner">
<link rel="help" href="https://w3c.github.io/aria/#aria-describedby">

<script>
  var scripts = {
		setFocusAfterBannerAndHideBottomLink: function(testPageDocument){
			// sets focus on a link after the banner landmark, and hides the last link inside the landmark region
			testPageDocument.getElementById('bottom').setAttribute('hidden', '');
			testPageDocument.getElementById('afterlink').focus();
		}
	};
</script>
<script type="module">
  import { initialize, verifyATBehavior, displayTestPageAndInstructions } from "../resources/aria-at-harness.mjs";

  new Promise((resolve) => {
    fetch('../support.json')
      .then(response => resolve(response.json()))
    })
  .then(supportJson => {
    const testJson = {
  "setup_script_description": "sets focus on a link after the banner landmark, and hides the last link inside the landmark region",
  "setupTestPage": "setFocusAfterBannerAndHideBottomLink",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "reading",
  "task": "navigate backwards to a button inside a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With the reading cursor on the 'Navigate backwards from here' link, navigate to the 'Show Headings' button.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'button' is conveyed"
    ],
    [
      "1",
      "Name 'Show Headings' is conveyed"
    ],
    [
      "1",
      "Button description is conveyed as: 'Visually outline the landmarks and/or headings on the page'"
    ]
  ]
};
    const commandJson = {
  "navigate backwards to a button inside a banner landmark": {
    "reading": {
      "jaws": [
        [ "UP" ],
        [ "SHIFT_B" ],
        [ "SHIFT_TAB" ]
      ],
      "nvda": [
        [ "UP" ],
        [ "SHIFT_B" ],
        [ "SHIFT_TAB" ]
      ]
    },
    "interaction": {
      "jaws": [ [ "SHIFT_TAB" ] ],
      "nvda": [ [ "SHIFT_TAB" ] ],
      "voiceover_macos": [
        [
          "CTRL_OPT_LEFT,CTRL_OPT_LEFT"
        ],
        [ "SHIFT_CTRL_OPT_CMD_J" ],
        [ "SHIFT_TAB" ]
      ]
    }
  }
};
    initialize(supportJson, commandJson);
    verifyATBehavior(testJson);
    displayTestPageAndInstructions("reference/2021-10-24_135455/banner.setFocusAfterBannerAndHideBottomLink.html");
  });
</script>
  "
`;

exports[`V1 test format version creates build files for v1 test (banner) 88`] = `
"{
  "setup_script_description": "sets focus on a link after the banner landmark, and hides the last link inside the landmark region",
  "setupTestPage": "setFocusAfterBannerAndHideBottomLink",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "reading",
  "task": "navigate backwards to a button inside a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With the reading cursor on the 'Navigate backwards from here' link, navigate to the 'Show Headings' button.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'button' is conveyed"
    ],
    [
      "1",
      "Name 'Show Headings' is conveyed"
    ],
    [
      "1",
      "Button description is conveyed as: 'Visually outline the landmarks and/or headings on the page'"
    ]
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 89`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate backwards to a button inside a banner landmark in interaction mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="help" href="https://w3c.github.io/aria/#aria-describedby">
    <link rel="preload" href="test-17-navigate-backwards-to-a-button-inside-a-banner-landmark-interaction-jaws.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-17-navigate-backwards-to-a-button-inside-a-banner-landmark-interaction-jaws.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 90`] = `
"{
  "info": {
    "testId": 17,
    "task": "navigate backwards to a button inside a banner landmark",
    "title": "Navigate backwards to a button inside a banner landmark in interaction mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      },
      {
        "refId": "aria-describedby",
        "value": "https://w3c.github.io/aria/#aria-describedby"
      }
    ]
  },
  "target": {
    "at": {
      "key": "jaws",
      "raw": "JAWS",
      "name": "JAWS"
    },
    "mode": "interaction",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusAfterBannerAndHideBottomLink.html",
    "setupScript": {
      "name": "setFocusAfterBannerAndHideBottomLink",
      "description": "sets focus on a link after the banner landmark, and hides the last link inside the landmark region",
      "source": "// sets focus on a link after the banner landmark, and hides the last link inside the landmark region\\ntestPageDocument.getElementById('bottom').setAttribute('hidden', '');\\ntestPageDocument.getElementById('afterlink').focus();\\n",
      "modulePath": "scripts/setFocusAfterBannerAndHideBottomLink.module.js",
      "jsonpPath": "scripts/setFocusAfterBannerAndHideBottomLink.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With focus on the 'Navigate backwards from here' link, navigate to the 'Show Headings' button."
    ],
    "raw": "With focus on the 'Navigate backwards from here' link, navigate to the 'Show Headings' button.",
    "mode": "Verify the PC Cursor is active by pressing Alt+Delete. If it is not, turn off the Virtual Cursor by pressing Insert+Z."
  },
  "commands": [
    {
      "id": "SHIFT_TAB",
      "keystroke": "Shift+Tab",
      "keypresses": [
        {
          "id": "SHIFT_TAB",
          "keystroke": "Shift+Tab"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'button' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Show Headings' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Button description is conveyed as: 'Visually outline the landmarks and/or headings on the page'"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 91`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate backwards to a button inside a banner landmark in interaction mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="help" href="https://w3c.github.io/aria/#aria-describedby">
    <link rel="preload" href="test-17-navigate-backwards-to-a-button-inside-a-banner-landmark-interaction-nvda.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-17-navigate-backwards-to-a-button-inside-a-banner-landmark-interaction-nvda.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 92`] = `
"{
  "info": {
    "testId": 17,
    "task": "navigate backwards to a button inside a banner landmark",
    "title": "Navigate backwards to a button inside a banner landmark in interaction mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      },
      {
        "refId": "aria-describedby",
        "value": "https://w3c.github.io/aria/#aria-describedby"
      }
    ]
  },
  "target": {
    "at": {
      "key": "nvda",
      "raw": "NVDA",
      "name": "NVDA"
    },
    "mode": "interaction",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusAfterBannerAndHideBottomLink.html",
    "setupScript": {
      "name": "setFocusAfterBannerAndHideBottomLink",
      "description": "sets focus on a link after the banner landmark, and hides the last link inside the landmark region",
      "source": "// sets focus on a link after the banner landmark, and hides the last link inside the landmark region\\ntestPageDocument.getElementById('bottom').setAttribute('hidden', '');\\ntestPageDocument.getElementById('afterlink').focus();\\n",
      "modulePath": "scripts/setFocusAfterBannerAndHideBottomLink.module.js",
      "jsonpPath": "scripts/setFocusAfterBannerAndHideBottomLink.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With focus on the 'Navigate backwards from here' link, navigate to the 'Show Headings' button."
    ],
    "raw": "With focus on the 'Navigate backwards from here' link, navigate to the 'Show Headings' button.",
    "mode": "If NVDA did not make the focus mode sound when the test page loaded, press Insert+Space to turn focus mode on."
  },
  "commands": [
    {
      "id": "SHIFT_TAB",
      "keystroke": "Shift+Tab",
      "keypresses": [
        {
          "id": "SHIFT_TAB",
          "keystroke": "Shift+Tab"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'button' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Show Headings' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Button description is conveyed as: 'Visually outline the landmarks and/or headings on the page'"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 93`] = `
"
<!DOCTYPE html>
<meta charset="utf-8">
<title>Navigate backwards to a button inside a banner landmark in interaction mode</title>
<link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
<link rel="help" href="https://w3c.github.io/aria/#banner">
<link rel="help" href="https://w3c.github.io/aria/#aria-describedby">

<script>
  var scripts = {
		setFocusAfterBannerAndHideBottomLink: function(testPageDocument){
			// sets focus on a link after the banner landmark, and hides the last link inside the landmark region
			testPageDocument.getElementById('bottom').setAttribute('hidden', '');
			testPageDocument.getElementById('afterlink').focus();
		}
	};
</script>
<script type="module">
  import { initialize, verifyATBehavior, displayTestPageAndInstructions } from "../resources/aria-at-harness.mjs";

  new Promise((resolve) => {
    fetch('../support.json')
      .then(response => resolve(response.json()))
    })
  .then(supportJson => {
    const testJson = {
  "setup_script_description": "sets focus on a link after the banner landmark, and hides the last link inside the landmark region",
  "setupTestPage": "setFocusAfterBannerAndHideBottomLink",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "interaction",
  "task": "navigate backwards to a button inside a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Navigate backwards from here' link, navigate to the 'Show Headings' button.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'button' is conveyed"
    ],
    [
      "1",
      "Name 'Show Headings' is conveyed"
    ],
    [
      "1",
      "Button description is conveyed as: 'Visually outline the landmarks and/or headings on the page'"
    ]
  ]
};
    const commandJson = {
  "navigate backwards to a button inside a banner landmark": {
    "reading": {
      "jaws": [
        [ "UP" ],
        [ "SHIFT_B" ],
        [ "SHIFT_TAB" ]
      ],
      "nvda": [
        [ "UP" ],
        [ "SHIFT_B" ],
        [ "SHIFT_TAB" ]
      ]
    },
    "interaction": {
      "jaws": [ [ "SHIFT_TAB" ] ],
      "nvda": [ [ "SHIFT_TAB" ] ],
      "voiceover_macos": [
        [
          "CTRL_OPT_LEFT,CTRL_OPT_LEFT"
        ],
        [ "SHIFT_CTRL_OPT_CMD_J" ],
        [ "SHIFT_TAB" ]
      ]
    }
  }
};
    initialize(supportJson, commandJson);
    verifyATBehavior(testJson);
    displayTestPageAndInstructions("reference/2021-10-24_135455/banner.setFocusAfterBannerAndHideBottomLink.html");
  });
</script>
  "
`;

exports[`V1 test format version creates build files for v1 test (banner) 94`] = `
"{
  "setup_script_description": "sets focus on a link after the banner landmark, and hides the last link inside the landmark region",
  "setupTestPage": "setFocusAfterBannerAndHideBottomLink",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "interaction",
  "task": "navigate backwards to a button inside a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Navigate backwards from here' link, navigate to the 'Show Headings' button.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'button' is conveyed"
    ],
    [
      "1",
      "Name 'Show Headings' is conveyed"
    ],
    [
      "1",
      "Button description is conveyed as: 'Visually outline the landmarks and/or headings on the page'"
    ]
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 95`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate backwards to a button inside a banner landmark</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="help" href="https://w3c.github.io/aria/#aria-describedby">
    <link rel="preload" href="test-18-navigate-backwards-to-a-button-inside-a-banner-landmark-interaction-voiceover_macos.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-18-navigate-backwards-to-a-button-inside-a-banner-landmark-interaction-voiceover_macos.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 96`] = `
"{
  "info": {
    "testId": 18,
    "task": "navigate backwards to a button inside a banner landmark",
    "title": "Navigate backwards to a button inside a banner landmark",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      },
      {
        "refId": "aria-describedby",
        "value": "https://w3c.github.io/aria/#aria-describedby"
      }
    ]
  },
  "target": {
    "at": {
      "key": "voiceover_macos",
      "raw": "VOICEOVER_MACOS",
      "name": "VoiceOver for macOS"
    },
    "mode": "interaction",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusAfterBannerAndHideBottomLink.html",
    "setupScript": {
      "name": "setFocusAfterBannerAndHideBottomLink",
      "description": "sets focus on a link after the banner landmark, and hides the last link inside the landmark region",
      "source": "// sets focus on a link after the banner landmark, and hides the last link inside the landmark region\\ntestPageDocument.getElementById('bottom').setAttribute('hidden', '');\\ntestPageDocument.getElementById('afterlink').focus();\\n",
      "modulePath": "scripts/setFocusAfterBannerAndHideBottomLink.module.js",
      "jsonpPath": "scripts/setFocusAfterBannerAndHideBottomLink.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With focus on the 'Navigate backwards from here' link, navigate to the 'Show Headings' button."
    ],
    "raw": "With focus on the 'Navigate backwards from here' link, navigate to the 'Show Headings' button.",
    "mode": "Toggle Quick Nav OFF by pressing the Left Arrow and Right Arrow keys at the same time."
  },
  "commands": [
    {
      "id": "CTRL_OPT_LEFT,CTRL_OPT_LEFT",
      "keystroke": "Ctrl+Option+Left, then Ctrl+Option+Left",
      "keypresses": [
        {
          "id": "CTRL_OPT_LEFT",
          "keystroke": "Ctrl+Option+Left"
        },
        {
          "id": "CTRL_OPT_LEFT",
          "keystroke": "Ctrl+Option+Left"
        }
      ]
    },
    {
      "id": "SHIFT_CTRL_OPT_CMD_J",
      "keystroke": "Shift+Control+Option+Command+J",
      "keypresses": [
        {
          "id": "SHIFT_CTRL_OPT_CMD_J",
          "keystroke": "Shift+Control+Option+Command+J"
        }
      ]
    },
    {
      "id": "SHIFT_TAB",
      "keystroke": "Shift+Tab",
      "keypresses": [
        {
          "id": "SHIFT_TAB",
          "keystroke": "Shift+Tab"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'button' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'Show Headings' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Button description is conveyed as: 'Visually outline the landmarks and/or headings on the page'"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 97`] = `
"
<!DOCTYPE html>
<meta charset="utf-8">
<title>Navigate backwards to a button inside a banner landmark</title>
<link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
<link rel="help" href="https://w3c.github.io/aria/#banner">
<link rel="help" href="https://w3c.github.io/aria/#aria-describedby">

<script>
  var scripts = {
		setFocusAfterBannerAndHideBottomLink: function(testPageDocument){
			// sets focus on a link after the banner landmark, and hides the last link inside the landmark region
			testPageDocument.getElementById('bottom').setAttribute('hidden', '');
			testPageDocument.getElementById('afterlink').focus();
		}
	};
</script>
<script type="module">
  import { initialize, verifyATBehavior, displayTestPageAndInstructions } from "../resources/aria-at-harness.mjs";

  new Promise((resolve) => {
    fetch('../support.json')
      .then(response => resolve(response.json()))
    })
  .then(supportJson => {
    const testJson = {
  "setup_script_description": "sets focus on a link after the banner landmark, and hides the last link inside the landmark region",
  "setupTestPage": "setFocusAfterBannerAndHideBottomLink",
  "applies_to": [
    "voiceover_macos"
  ],
  "mode": "interaction",
  "task": "navigate backwards to a button inside a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Navigate backwards from here' link, navigate to the 'Show Headings' button.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'button' is conveyed"
    ],
    [
      "1",
      "Name 'Show Headings' is conveyed"
    ],
    [
      "1",
      "Button description is conveyed as: 'Visually outline the landmarks and/or headings on the page'"
    ]
  ]
};
    const commandJson = {
  "navigate backwards to a button inside a banner landmark": {
    "reading": {
      "jaws": [
        [ "UP" ],
        [ "SHIFT_B" ],
        [ "SHIFT_TAB" ]
      ],
      "nvda": [
        [ "UP" ],
        [ "SHIFT_B" ],
        [ "SHIFT_TAB" ]
      ]
    },
    "interaction": {
      "jaws": [ [ "SHIFT_TAB" ] ],
      "nvda": [ [ "SHIFT_TAB" ] ],
      "voiceover_macos": [
        [
          "CTRL_OPT_LEFT,CTRL_OPT_LEFT"
        ],
        [ "SHIFT_CTRL_OPT_CMD_J" ],
        [ "SHIFT_TAB" ]
      ]
    }
  }
};
    initialize(supportJson, commandJson);
    verifyATBehavior(testJson);
    displayTestPageAndInstructions("reference/2021-10-24_135455/banner.setFocusAfterBannerAndHideBottomLink.html");
  });
</script>
  "
`;

exports[`V1 test format version creates build files for v1 test (banner) 98`] = `
"{
  "setup_script_description": "sets focus on a link after the banner landmark, and hides the last link inside the landmark region",
  "setupTestPage": "setFocusAfterBannerAndHideBottomLink",
  "applies_to": [
    "voiceover_macos"
  ],
  "mode": "interaction",
  "task": "navigate backwards to a button inside a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Navigate backwards from here' link, navigate to the 'Show Headings' button.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'button' is conveyed"
    ],
    [
      "1",
      "Name 'Show Headings' is conveyed"
    ],
    [
      "1",
      "Button description is conveyed as: 'Visually outline the landmarks and/or headings on the page'"
    ]
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 99`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate forwards to an image inside a banner landmark in reading mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-19-navigate-forwards-to-an-image-inside-a-banner-landmark-reading-jaws.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-19-navigate-forwards-to-an-image-inside-a-banner-landmark-reading-jaws.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 100`] = `
"{
  "info": {
    "testId": 19,
    "task": "navigate forwards to an image inside a banner landmark",
    "title": "Navigate forwards to an image inside a banner landmark in reading mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "jaws",
      "raw": "JAWS",
      "name": "JAWS"
    },
    "mode": "reading",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusBeforeBanner.html",
    "setupScript": {
      "name": "setFocusBeforeBanner",
      "description": "sets focus on a link before the banner landmark",
      "source": "// sets focus on a link before the banner landmark\\ntestPageDocument.getElementById('beforelink').focus();\\n",
      "modulePath": "scripts/setFocusBeforeBanner.module.js",
      "jsonpPath": "scripts/setFocusBeforeBanner.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With the reading cursor on the 'Navigate forwards from here' link, navigate to the 'W3C Logo' image."
    ],
    "raw": "With the reading cursor on the 'Navigate forwards from here' link, navigate to the 'W3C Logo' image.",
    "mode": "Verify the Virtual Cursor is active by pressing Alt+Delete. If it is not, exit Forms Mode to activate the Virtual Cursor by pressing Escape."
  },
  "commands": [
    {
      "id": "G",
      "keystroke": "G",
      "keypresses": [
        {
          "id": "G",
          "keystroke": "G"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'image' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'W3C Logo' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 101`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate forwards to an image inside a banner landmark in reading mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-19-navigate-forwards-to-an-image-inside-a-banner-landmark-reading-nvda.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-19-navigate-forwards-to-an-image-inside-a-banner-landmark-reading-nvda.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 102`] = `
"{
  "info": {
    "testId": 19,
    "task": "navigate forwards to an image inside a banner landmark",
    "title": "Navigate forwards to an image inside a banner landmark in reading mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "nvda",
      "raw": "NVDA",
      "name": "NVDA"
    },
    "mode": "reading",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusBeforeBanner.html",
    "setupScript": {
      "name": "setFocusBeforeBanner",
      "description": "sets focus on a link before the banner landmark",
      "source": "// sets focus on a link before the banner landmark\\ntestPageDocument.getElementById('beforelink').focus();\\n",
      "modulePath": "scripts/setFocusBeforeBanner.module.js",
      "jsonpPath": "scripts/setFocusBeforeBanner.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With the reading cursor on the 'Navigate forwards from here' link, navigate to the 'W3C Logo' image."
    ],
    "raw": "With the reading cursor on the 'Navigate forwards from here' link, navigate to the 'W3C Logo' image.",
    "mode": "Ensure NVDA is in browse mode by pressing Escape. Note: This command has no effect if NVDA is already in browse mode."
  },
  "commands": [
    {
      "id": "G",
      "keystroke": "G",
      "keypresses": [
        {
          "id": "G",
          "keystroke": "G"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'image' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'W3C Logo' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 103`] = `
"
<!DOCTYPE html>
<meta charset="utf-8">
<title>Navigate forwards to an image inside a banner landmark in reading mode</title>
<link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
<link rel="help" href="https://w3c.github.io/aria/#banner">

<script>
  var scripts = {
		setFocusBeforeBanner: function(testPageDocument){
			// sets focus on a link before the banner landmark
			testPageDocument.getElementById('beforelink').focus();
		}
	};
</script>
<script type="module">
  import { initialize, verifyATBehavior, displayTestPageAndInstructions } from "../resources/aria-at-harness.mjs";

  new Promise((resolve) => {
    fetch('../support.json')
      .then(response => resolve(response.json()))
    })
  .then(supportJson => {
    const testJson = {
  "setup_script_description": "sets focus on a link before the banner landmark",
  "setupTestPage": "setFocusBeforeBanner",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "reading",
  "task": "navigate forwards to an image inside a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With the reading cursor on the 'Navigate forwards from here' link, navigate to the 'W3C Logo' image.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'image' is conveyed"
    ],
    [
      "1",
      "Name 'W3C Logo' is conveyed"
    ]
  ]
};
    const commandJson = {
  "navigate forwards to an image inside a banner landmark": {
    "reading": {
      "jaws": [ [ "G" ] ],
      "nvda": [ [ "G" ] ]
    },
    "interaction": {
      "voiceover_macos": [ [ "CTRL_OPT_CMD_G" ] ]
    }
  }
};
    initialize(supportJson, commandJson);
    verifyATBehavior(testJson);
    displayTestPageAndInstructions("reference/2021-10-24_135455/banner.setFocusBeforeBanner.html");
  });
</script>
  "
`;

exports[`V1 test format version creates build files for v1 test (banner) 104`] = `
"{
  "setup_script_description": "sets focus on a link before the banner landmark",
  "setupTestPage": "setFocusBeforeBanner",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "reading",
  "task": "navigate forwards to an image inside a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With the reading cursor on the 'Navigate forwards from here' link, navigate to the 'W3C Logo' image.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'image' is conveyed"
    ],
    [
      "1",
      "Name 'W3C Logo' is conveyed"
    ]
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 105`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate forwards to an image inside a banner landmark</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-20-navigate-forwards-to-an-image-inside-a-banner-landmark-interaction-voiceover_macos.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-20-navigate-forwards-to-an-image-inside-a-banner-landmark-interaction-voiceover_macos.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 106`] = `
"{
  "info": {
    "testId": 20,
    "task": "navigate forwards to an image inside a banner landmark",
    "title": "Navigate forwards to an image inside a banner landmark",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "voiceover_macos",
      "raw": "VOICEOVER_MACOS",
      "name": "VoiceOver for macOS"
    },
    "mode": "interaction",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusBeforeBanner.html",
    "setupScript": {
      "name": "setFocusBeforeBanner",
      "description": "sets focus on a link before the banner landmark",
      "source": "// sets focus on a link before the banner landmark\\ntestPageDocument.getElementById('beforelink').focus();\\n",
      "modulePath": "scripts/setFocusBeforeBanner.module.js",
      "jsonpPath": "scripts/setFocusBeforeBanner.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With focus on the 'Navigate forwards from here' link, navigate to the 'W3C Logo' image."
    ],
    "raw": "With focus on the 'Navigate forwards from here' link, navigate to the 'W3C Logo' image.",
    "mode": "Toggle Quick Nav OFF by pressing the Left Arrow and Right Arrow keys at the same time."
  },
  "commands": [
    {
      "id": "CTRL_OPT_CMD_G",
      "keystroke": "Control+Option+Command+G",
      "keypresses": [
        {
          "id": "CTRL_OPT_CMD_G",
          "keystroke": "Control+Option+Command+G"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'image' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'W3C Logo' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 107`] = `
"
<!DOCTYPE html>
<meta charset="utf-8">
<title>Navigate forwards to an image inside a banner landmark</title>
<link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
<link rel="help" href="https://w3c.github.io/aria/#banner">

<script>
  var scripts = {
		setFocusBeforeBanner: function(testPageDocument){
			// sets focus on a link before the banner landmark
			testPageDocument.getElementById('beforelink').focus();
		}
	};
</script>
<script type="module">
  import { initialize, verifyATBehavior, displayTestPageAndInstructions } from "../resources/aria-at-harness.mjs";

  new Promise((resolve) => {
    fetch('../support.json')
      .then(response => resolve(response.json()))
    })
  .then(supportJson => {
    const testJson = {
  "setup_script_description": "sets focus on a link before the banner landmark",
  "setupTestPage": "setFocusBeforeBanner",
  "applies_to": [
    "voiceover_macos"
  ],
  "mode": "interaction",
  "task": "navigate forwards to an image inside a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Navigate forwards from here' link, navigate to the 'W3C Logo' image.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'image' is conveyed"
    ],
    [
      "1",
      "Name 'W3C Logo' is conveyed"
    ]
  ]
};
    const commandJson = {
  "navigate forwards to an image inside a banner landmark": {
    "reading": {
      "jaws": [ [ "G" ] ],
      "nvda": [ [ "G" ] ]
    },
    "interaction": {
      "voiceover_macos": [ [ "CTRL_OPT_CMD_G" ] ]
    }
  }
};
    initialize(supportJson, commandJson);
    verifyATBehavior(testJson);
    displayTestPageAndInstructions("reference/2021-10-24_135455/banner.setFocusBeforeBanner.html");
  });
</script>
  "
`;

exports[`V1 test format version creates build files for v1 test (banner) 108`] = `
"{
  "setup_script_description": "sets focus on a link before the banner landmark",
  "setupTestPage": "setFocusBeforeBanner",
  "applies_to": [
    "voiceover_macos"
  ],
  "mode": "interaction",
  "task": "navigate forwards to an image inside a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Navigate forwards from here' link, navigate to the 'W3C Logo' image.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'image' is conveyed"
    ],
    [
      "1",
      "Name 'W3C Logo' is conveyed"
    ]
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 109`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate backwards to an image inside a banner landmark in reading mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-21-navigate-backwards-to-an-image-inside-a-banner-landmark-reading-jaws.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-21-navigate-backwards-to-an-image-inside-a-banner-landmark-reading-jaws.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 110`] = `
"{
  "info": {
    "testId": 21,
    "task": "navigate backwards to an image inside a banner landmark",
    "title": "Navigate backwards to an image inside a banner landmark in reading mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "jaws",
      "raw": "JAWS",
      "name": "JAWS"
    },
    "mode": "reading",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusAfterBanner.html",
    "setupScript": {
      "name": "setFocusAfterBanner",
      "description": "sets focus on a link after the banner landmark",
      "source": "// sets focus on a link after the banner landmark\\ntestPageDocument.getElementById('afterlink').focus();\\n",
      "modulePath": "scripts/setFocusAfterBanner.module.js",
      "jsonpPath": "scripts/setFocusAfterBanner.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With the reading cursor on the 'Navigate backwards from here' link, navigate to the 'W3C Logo' image."
    ],
    "raw": "With the reading cursor on the 'Navigate backwards from here' link, navigate to the 'W3C Logo' image.",
    "mode": "Verify the Virtual Cursor is active by pressing Alt+Delete. If it is not, exit Forms Mode to activate the Virtual Cursor by pressing Escape."
  },
  "commands": [
    {
      "id": "SHIFT_G",
      "keystroke": "Shift+G",
      "keypresses": [
        {
          "id": "SHIFT_G",
          "keystroke": "Shift+G"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'image' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'W3C Logo' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 111`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate backwards to an image inside a banner landmark in reading mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-21-navigate-backwards-to-an-image-inside-a-banner-landmark-reading-nvda.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-21-navigate-backwards-to-an-image-inside-a-banner-landmark-reading-nvda.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 112`] = `
"{
  "info": {
    "testId": 21,
    "task": "navigate backwards to an image inside a banner landmark",
    "title": "Navigate backwards to an image inside a banner landmark in reading mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "nvda",
      "raw": "NVDA",
      "name": "NVDA"
    },
    "mode": "reading",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusAfterBanner.html",
    "setupScript": {
      "name": "setFocusAfterBanner",
      "description": "sets focus on a link after the banner landmark",
      "source": "// sets focus on a link after the banner landmark\\ntestPageDocument.getElementById('afterlink').focus();\\n",
      "modulePath": "scripts/setFocusAfterBanner.module.js",
      "jsonpPath": "scripts/setFocusAfterBanner.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With the reading cursor on the 'Navigate backwards from here' link, navigate to the 'W3C Logo' image."
    ],
    "raw": "With the reading cursor on the 'Navigate backwards from here' link, navigate to the 'W3C Logo' image.",
    "mode": "Ensure NVDA is in browse mode by pressing Escape. Note: This command has no effect if NVDA is already in browse mode."
  },
  "commands": [
    {
      "id": "SHIFT_G",
      "keystroke": "Shift+G",
      "keypresses": [
        {
          "id": "SHIFT_G",
          "keystroke": "Shift+G"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'image' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'W3C Logo' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 113`] = `
"
<!DOCTYPE html>
<meta charset="utf-8">
<title>Navigate backwards to an image inside a banner landmark in reading mode</title>
<link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
<link rel="help" href="https://w3c.github.io/aria/#banner">

<script>
  var scripts = {
		setFocusAfterBanner: function(testPageDocument){
			// sets focus on a link after the banner landmark
			testPageDocument.getElementById('afterlink').focus();
		}
	};
</script>
<script type="module">
  import { initialize, verifyATBehavior, displayTestPageAndInstructions } from "../resources/aria-at-harness.mjs";

  new Promise((resolve) => {
    fetch('../support.json')
      .then(response => resolve(response.json()))
    })
  .then(supportJson => {
    const testJson = {
  "setup_script_description": "sets focus on a link after the banner landmark",
  "setupTestPage": "setFocusAfterBanner",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "reading",
  "task": "navigate backwards to an image inside a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With the reading cursor on the 'Navigate backwards from here' link, navigate to the 'W3C Logo' image.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'image' is conveyed"
    ],
    [
      "1",
      "Name 'W3C Logo' is conveyed"
    ]
  ]
};
    const commandJson = {
  "navigate backwards to an image inside a banner landmark": {
    "reading": {
      "jaws": [ [ "SHIFT_G" ] ],
      "nvda": [ [ "SHIFT_G" ] ]
    },
    "interaction": {
      "voiceover_macos": [ [ "SHIFT_CTRL_OPT_CMD_G" ] ]
    }
  }
};
    initialize(supportJson, commandJson);
    verifyATBehavior(testJson);
    displayTestPageAndInstructions("reference/2021-10-24_135455/banner.setFocusAfterBanner.html");
  });
</script>
  "
`;

exports[`V1 test format version creates build files for v1 test (banner) 114`] = `
"{
  "setup_script_description": "sets focus on a link after the banner landmark",
  "setupTestPage": "setFocusAfterBanner",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "reading",
  "task": "navigate backwards to an image inside a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With the reading cursor on the 'Navigate backwards from here' link, navigate to the 'W3C Logo' image.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'image' is conveyed"
    ],
    [
      "1",
      "Name 'W3C Logo' is conveyed"
    ]
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 115`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate backwards to an image inside a banner landmark</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-22-navigate-backwards-to-an-image-inside-a-banner-landmark-interaction-voiceover_macos.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-22-navigate-backwards-to-an-image-inside-a-banner-landmark-interaction-voiceover_macos.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 116`] = `
"{
  "info": {
    "testId": 22,
    "task": "navigate backwards to an image inside a banner landmark",
    "title": "Navigate backwards to an image inside a banner landmark",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "voiceover_macos",
      "raw": "VOICEOVER_MACOS",
      "name": "VoiceOver for macOS"
    },
    "mode": "interaction",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusAfterBanner.html",
    "setupScript": {
      "name": "setFocusAfterBanner",
      "description": "sets focus on a link after the banner landmark",
      "source": "// sets focus on a link after the banner landmark\\ntestPageDocument.getElementById('afterlink').focus();\\n",
      "modulePath": "scripts/setFocusAfterBanner.module.js",
      "jsonpPath": "scripts/setFocusAfterBanner.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With focus on the 'Navigate backwards from here' link, navigate to the 'W3C Logo' image."
    ],
    "raw": "With focus on the 'Navigate backwards from here' link, navigate to the 'W3C Logo' image.",
    "mode": "Toggle Quick Nav OFF by pressing the Left Arrow and Right Arrow keys at the same time."
  },
  "commands": [
    {
      "id": "SHIFT_CTRL_OPT_CMD_G",
      "keystroke": "Shift+Control+Option+Command+G",
      "keypresses": [
        {
          "id": "SHIFT_CTRL_OPT_CMD_G",
          "keystroke": "Shift+Control+Option+Command+G"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'image' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'W3C Logo' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 117`] = `
"
<!DOCTYPE html>
<meta charset="utf-8">
<title>Navigate backwards to an image inside a banner landmark</title>
<link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
<link rel="help" href="https://w3c.github.io/aria/#banner">

<script>
  var scripts = {
		setFocusAfterBanner: function(testPageDocument){
			// sets focus on a link after the banner landmark
			testPageDocument.getElementById('afterlink').focus();
		}
	};
</script>
<script type="module">
  import { initialize, verifyATBehavior, displayTestPageAndInstructions } from "../resources/aria-at-harness.mjs";

  new Promise((resolve) => {
    fetch('../support.json')
      .then(response => resolve(response.json()))
    })
  .then(supportJson => {
    const testJson = {
  "setup_script_description": "sets focus on a link after the banner landmark",
  "setupTestPage": "setFocusAfterBanner",
  "applies_to": [
    "voiceover_macos"
  ],
  "mode": "interaction",
  "task": "navigate backwards to an image inside a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Navigate backwards from here' link, navigate to the 'W3C Logo' image.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'image' is conveyed"
    ],
    [
      "1",
      "Name 'W3C Logo' is conveyed"
    ]
  ]
};
    const commandJson = {
  "navigate backwards to an image inside a banner landmark": {
    "reading": {
      "jaws": [ [ "SHIFT_G" ] ],
      "nvda": [ [ "SHIFT_G" ] ]
    },
    "interaction": {
      "voiceover_macos": [ [ "SHIFT_CTRL_OPT_CMD_G" ] ]
    }
  }
};
    initialize(supportJson, commandJson);
    verifyATBehavior(testJson);
    displayTestPageAndInstructions("reference/2021-10-24_135455/banner.setFocusAfterBanner.html");
  });
</script>
  "
`;

exports[`V1 test format version creates build files for v1 test (banner) 118`] = `
"{
  "setup_script_description": "sets focus on a link after the banner landmark",
  "setupTestPage": "setFocusAfterBanner",
  "applies_to": [
    "voiceover_macos"
  ],
  "mode": "interaction",
  "task": "navigate backwards to an image inside a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Navigate backwards from here' link, navigate to the 'W3C Logo' image.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'image' is conveyed"
    ],
    [
      "1",
      "Name 'W3C Logo' is conveyed"
    ]
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 119`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate forwards to a heading inside a banner landmark in reading mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-23-navigate-forwards-to-a-heading-inside-a-banner-landmark-reading-jaws.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-23-navigate-forwards-to-a-heading-inside-a-banner-landmark-reading-jaws.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 120`] = `
"{
  "info": {
    "testId": 23,
    "task": "navigate forwards to a heading inside a banner landmark",
    "title": "Navigate forwards to a heading inside a banner landmark in reading mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "jaws",
      "raw": "JAWS",
      "name": "JAWS"
    },
    "mode": "reading",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusBeforeBanner.html",
    "setupScript": {
      "name": "setFocusBeforeBanner",
      "description": "sets focus on a link before the banner landmark",
      "source": "// sets focus on a link before the banner landmark\\ntestPageDocument.getElementById('beforelink').focus();\\n",
      "modulePath": "scripts/setFocusBeforeBanner.module.js",
      "jsonpPath": "scripts/setFocusBeforeBanner.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With the reading cursor on the 'Navigate forwards from here' link, navigate to the 'ARIA Landmarks Example' heading."
    ],
    "raw": "With the reading cursor on the 'Navigate forwards from here' link, navigate to the 'ARIA Landmarks Example' heading.",
    "mode": "Verify the Virtual Cursor is active by pressing Alt+Delete. If it is not, exit Forms Mode to activate the Virtual Cursor by pressing Escape."
  },
  "commands": [
    {
      "id": "H",
      "keystroke": "H",
      "keypresses": [
        {
          "id": "H",
          "keystroke": "H"
        }
      ]
    },
    {
      "id": "ONE",
      "keystroke": "1",
      "keypresses": [
        {
          "id": "ONE",
          "keystroke": "1"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'heading' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Heading level '1' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'ARIA Landmarks Example' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 121`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate forwards to a heading inside a banner landmark in reading mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-23-navigate-forwards-to-a-heading-inside-a-banner-landmark-reading-nvda.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-23-navigate-forwards-to-a-heading-inside-a-banner-landmark-reading-nvda.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 122`] = `
"{
  "info": {
    "testId": 23,
    "task": "navigate forwards to a heading inside a banner landmark",
    "title": "Navigate forwards to a heading inside a banner landmark in reading mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "nvda",
      "raw": "NVDA",
      "name": "NVDA"
    },
    "mode": "reading",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusBeforeBanner.html",
    "setupScript": {
      "name": "setFocusBeforeBanner",
      "description": "sets focus on a link before the banner landmark",
      "source": "// sets focus on a link before the banner landmark\\ntestPageDocument.getElementById('beforelink').focus();\\n",
      "modulePath": "scripts/setFocusBeforeBanner.module.js",
      "jsonpPath": "scripts/setFocusBeforeBanner.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With the reading cursor on the 'Navigate forwards from here' link, navigate to the 'ARIA Landmarks Example' heading."
    ],
    "raw": "With the reading cursor on the 'Navigate forwards from here' link, navigate to the 'ARIA Landmarks Example' heading.",
    "mode": "Ensure NVDA is in browse mode by pressing Escape. Note: This command has no effect if NVDA is already in browse mode."
  },
  "commands": [
    {
      "id": "H",
      "keystroke": "H",
      "keypresses": [
        {
          "id": "H",
          "keystroke": "H"
        }
      ]
    },
    {
      "id": "ONE",
      "keystroke": "1",
      "keypresses": [
        {
          "id": "ONE",
          "keystroke": "1"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'heading' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Heading level '1' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'ARIA Landmarks Example' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 123`] = `
"
<!DOCTYPE html>
<meta charset="utf-8">
<title>Navigate forwards to a heading inside a banner landmark in reading mode</title>
<link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
<link rel="help" href="https://w3c.github.io/aria/#banner">

<script>
  var scripts = {
		setFocusBeforeBanner: function(testPageDocument){
			// sets focus on a link before the banner landmark
			testPageDocument.getElementById('beforelink').focus();
		}
	};
</script>
<script type="module">
  import { initialize, verifyATBehavior, displayTestPageAndInstructions } from "../resources/aria-at-harness.mjs";

  new Promise((resolve) => {
    fetch('../support.json')
      .then(response => resolve(response.json()))
    })
  .then(supportJson => {
    const testJson = {
  "setup_script_description": "sets focus on a link before the banner landmark",
  "setupTestPage": "setFocusBeforeBanner",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "reading",
  "task": "navigate forwards to a heading inside a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With the reading cursor on the 'Navigate forwards from here' link, navigate to the 'ARIA Landmarks Example' heading.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'heading' is conveyed"
    ],
    [
      "1",
      "Heading level '1' is conveyed"
    ],
    [
      "1",
      "Name 'ARIA Landmarks Example' is conveyed"
    ]
  ]
};
    const commandJson = {
  "navigate forwards to a heading inside a banner landmark": {
    "reading": {
      "jaws": [ [ "H" ], [ "ONE" ] ],
      "nvda": [ [ "H" ], [ "ONE" ] ]
    },
    "interaction": {
      "voiceover_macos": [ [ "CTRL_OPT_CMD_H" ] ]
    }
  }
};
    initialize(supportJson, commandJson);
    verifyATBehavior(testJson);
    displayTestPageAndInstructions("reference/2021-10-24_135455/banner.setFocusBeforeBanner.html");
  });
</script>
  "
`;

exports[`V1 test format version creates build files for v1 test (banner) 124`] = `
"{
  "setup_script_description": "sets focus on a link before the banner landmark",
  "setupTestPage": "setFocusBeforeBanner",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "reading",
  "task": "navigate forwards to a heading inside a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With the reading cursor on the 'Navigate forwards from here' link, navigate to the 'ARIA Landmarks Example' heading.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'heading' is conveyed"
    ],
    [
      "1",
      "Heading level '1' is conveyed"
    ],
    [
      "1",
      "Name 'ARIA Landmarks Example' is conveyed"
    ]
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 125`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate forwards to a heading inside a banner landmark</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-24-navigate-forwards-to-a-heading-inside-a-banner-landmark-interaction-voiceover_macos.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-24-navigate-forwards-to-a-heading-inside-a-banner-landmark-interaction-voiceover_macos.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 126`] = `
"{
  "info": {
    "testId": 24,
    "task": "navigate forwards to a heading inside a banner landmark",
    "title": "Navigate forwards to a heading inside a banner landmark",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "voiceover_macos",
      "raw": "VOICEOVER_MACOS",
      "name": "VoiceOver for macOS"
    },
    "mode": "interaction",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusBeforeBanner.html",
    "setupScript": {
      "name": "setFocusBeforeBanner",
      "description": "sets focus on a link before the banner landmark",
      "source": "// sets focus on a link before the banner landmark\\ntestPageDocument.getElementById('beforelink').focus();\\n",
      "modulePath": "scripts/setFocusBeforeBanner.module.js",
      "jsonpPath": "scripts/setFocusBeforeBanner.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With focus on the 'Navigate forwards from here' link, navigate to the 'ARIA Landmarks Example' heading."
    ],
    "raw": "With focus on the 'Navigate forwards from here' link, navigate to the 'ARIA Landmarks Example' heading.",
    "mode": "Toggle Quick Nav OFF by pressing the Left Arrow and Right Arrow keys at the same time."
  },
  "commands": [
    {
      "id": "CTRL_OPT_CMD_H",
      "keystroke": "Control+Option+Command+H",
      "keypresses": [
        {
          "id": "CTRL_OPT_CMD_H",
          "keystroke": "Control+Option+Command+H"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'heading' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Heading level '1' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'ARIA Landmarks Example' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 127`] = `
"
<!DOCTYPE html>
<meta charset="utf-8">
<title>Navigate forwards to a heading inside a banner landmark</title>
<link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
<link rel="help" href="https://w3c.github.io/aria/#banner">

<script>
  var scripts = {
		setFocusBeforeBanner: function(testPageDocument){
			// sets focus on a link before the banner landmark
			testPageDocument.getElementById('beforelink').focus();
		}
	};
</script>
<script type="module">
  import { initialize, verifyATBehavior, displayTestPageAndInstructions } from "../resources/aria-at-harness.mjs";

  new Promise((resolve) => {
    fetch('../support.json')
      .then(response => resolve(response.json()))
    })
  .then(supportJson => {
    const testJson = {
  "setup_script_description": "sets focus on a link before the banner landmark",
  "setupTestPage": "setFocusBeforeBanner",
  "applies_to": [
    "voiceover_macos"
  ],
  "mode": "interaction",
  "task": "navigate forwards to a heading inside a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Navigate forwards from here' link, navigate to the 'ARIA Landmarks Example' heading.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'heading' is conveyed"
    ],
    [
      "1",
      "Heading level '1' is conveyed"
    ],
    [
      "1",
      "Name 'ARIA Landmarks Example' is conveyed"
    ]
  ]
};
    const commandJson = {
  "navigate forwards to a heading inside a banner landmark": {
    "reading": {
      "jaws": [ [ "H" ], [ "ONE" ] ],
      "nvda": [ [ "H" ], [ "ONE" ] ]
    },
    "interaction": {
      "voiceover_macos": [ [ "CTRL_OPT_CMD_H" ] ]
    }
  }
};
    initialize(supportJson, commandJson);
    verifyATBehavior(testJson);
    displayTestPageAndInstructions("reference/2021-10-24_135455/banner.setFocusBeforeBanner.html");
  });
</script>
  "
`;

exports[`V1 test format version creates build files for v1 test (banner) 128`] = `
"{
  "setup_script_description": "sets focus on a link before the banner landmark",
  "setupTestPage": "setFocusBeforeBanner",
  "applies_to": [
    "voiceover_macos"
  ],
  "mode": "interaction",
  "task": "navigate forwards to a heading inside a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Navigate forwards from here' link, navigate to the 'ARIA Landmarks Example' heading.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'heading' is conveyed"
    ],
    [
      "1",
      "Heading level '1' is conveyed"
    ],
    [
      "1",
      "Name 'ARIA Landmarks Example' is conveyed"
    ]
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 129`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate backwards to a heading inside a banner landmark in reading mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-25-navigate-backwards-to-a-heading-inside-a-banner-landmark-reading-jaws.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-25-navigate-backwards-to-a-heading-inside-a-banner-landmark-reading-jaws.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 130`] = `
"{
  "info": {
    "testId": 25,
    "task": "navigate backwards to a heading inside a banner landmark",
    "title": "Navigate backwards to a heading inside a banner landmark in reading mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "jaws",
      "raw": "JAWS",
      "name": "JAWS"
    },
    "mode": "reading",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusAfterBanner.html",
    "setupScript": {
      "name": "setFocusAfterBanner",
      "description": "sets focus on a link after the banner landmark",
      "source": "// sets focus on a link after the banner landmark\\ntestPageDocument.getElementById('afterlink').focus();\\n",
      "modulePath": "scripts/setFocusAfterBanner.module.js",
      "jsonpPath": "scripts/setFocusAfterBanner.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With the reading cursor on the 'Navigate backwards from here' link, navigate to the 'ARIA Landmarks Example' heading."
    ],
    "raw": "With the reading cursor on the 'Navigate backwards from here' link, navigate to the 'ARIA Landmarks Example' heading.",
    "mode": "Verify the Virtual Cursor is active by pressing Alt+Delete. If it is not, exit Forms Mode to activate the Virtual Cursor by pressing Escape."
  },
  "commands": [
    {
      "id": "SHIFT_H",
      "keystroke": "Shift+H",
      "keypresses": [
        {
          "id": "SHIFT_H",
          "keystroke": "Shift+H"
        }
      ]
    },
    {
      "id": "SHIFT_ONE",
      "keystroke": "Shift+1",
      "keypresses": [
        {
          "id": "SHIFT_ONE",
          "keystroke": "Shift+1"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'heading' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Heading level '1' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'ARIA Landmarks Example' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 131`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate backwards to a heading inside a banner landmark in reading mode</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-25-navigate-backwards-to-a-heading-inside-a-banner-landmark-reading-nvda.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-25-navigate-backwards-to-a-heading-inside-a-banner-landmark-reading-nvda.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 132`] = `
"{
  "info": {
    "testId": 25,
    "task": "navigate backwards to a heading inside a banner landmark",
    "title": "Navigate backwards to a heading inside a banner landmark in reading mode",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "nvda",
      "raw": "NVDA",
      "name": "NVDA"
    },
    "mode": "reading",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusAfterBanner.html",
    "setupScript": {
      "name": "setFocusAfterBanner",
      "description": "sets focus on a link after the banner landmark",
      "source": "// sets focus on a link after the banner landmark\\ntestPageDocument.getElementById('afterlink').focus();\\n",
      "modulePath": "scripts/setFocusAfterBanner.module.js",
      "jsonpPath": "scripts/setFocusAfterBanner.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With the reading cursor on the 'Navigate backwards from here' link, navigate to the 'ARIA Landmarks Example' heading."
    ],
    "raw": "With the reading cursor on the 'Navigate backwards from here' link, navigate to the 'ARIA Landmarks Example' heading.",
    "mode": "Ensure NVDA is in browse mode by pressing Escape. Note: This command has no effect if NVDA is already in browse mode."
  },
  "commands": [
    {
      "id": "SHIFT_H",
      "keystroke": "Shift+H",
      "keypresses": [
        {
          "id": "SHIFT_H",
          "keystroke": "Shift+H"
        }
      ]
    },
    {
      "id": "SHIFT_ONE",
      "keystroke": "Shift+1",
      "keypresses": [
        {
          "id": "SHIFT_ONE",
          "keystroke": "Shift+1"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'heading' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Heading level '1' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'ARIA Landmarks Example' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 133`] = `
"
<!DOCTYPE html>
<meta charset="utf-8">
<title>Navigate backwards to a heading inside a banner landmark in reading mode</title>
<link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
<link rel="help" href="https://w3c.github.io/aria/#banner">

<script>
  var scripts = {
		setFocusAfterBanner: function(testPageDocument){
			// sets focus on a link after the banner landmark
			testPageDocument.getElementById('afterlink').focus();
		}
	};
</script>
<script type="module">
  import { initialize, verifyATBehavior, displayTestPageAndInstructions } from "../resources/aria-at-harness.mjs";

  new Promise((resolve) => {
    fetch('../support.json')
      .then(response => resolve(response.json()))
    })
  .then(supportJson => {
    const testJson = {
  "setup_script_description": "sets focus on a link after the banner landmark",
  "setupTestPage": "setFocusAfterBanner",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "reading",
  "task": "navigate backwards to a heading inside a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With the reading cursor on the 'Navigate backwards from here' link, navigate to the 'ARIA Landmarks Example' heading.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'heading' is conveyed"
    ],
    [
      "1",
      "Heading level '1' is conveyed"
    ],
    [
      "1",
      "Name 'ARIA Landmarks Example' is conveyed"
    ]
  ]
};
    const commandJson = {
  "navigate backwards to a heading inside a banner landmark": {
    "reading": {
      "jaws": [
        [ "SHIFT_H" ],
        [ "SHIFT_ONE" ]
      ],
      "nvda": [
        [ "SHIFT_H" ],
        [ "SHIFT_ONE" ]
      ]
    },
    "interaction": {
      "voiceover_macos": [ [ "SHIFT_CTRL_OPT_CMD_H" ] ]
    }
  }
};
    initialize(supportJson, commandJson);
    verifyATBehavior(testJson);
    displayTestPageAndInstructions("reference/2021-10-24_135455/banner.setFocusAfterBanner.html");
  });
</script>
  "
`;

exports[`V1 test format version creates build files for v1 test (banner) 134`] = `
"{
  "setup_script_description": "sets focus on a link after the banner landmark",
  "setupTestPage": "setFocusAfterBanner",
  "applies_to": [
    "jaws",
    "nvda"
  ],
  "mode": "reading",
  "task": "navigate backwards to a heading inside a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With the reading cursor on the 'Navigate backwards from here' link, navigate to the 'ARIA Landmarks Example' heading.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'heading' is conveyed"
    ],
    [
      "1",
      "Heading level '1' is conveyed"
    ],
    [
      "1",
      "Name 'ARIA Landmarks Example' is conveyed"
    ]
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 135`] = `
"<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Navigate backwards to a heading inside a banner landmark</title>
    <link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
    <link rel="help" href="https://w3c.github.io/aria/#banner">
    <link rel="preload" href="test-26-navigate-backwards-to-a-heading-inside-a-banner-landmark-interaction-voiceover_macos.collected.json" as="fetch">
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

      table.record-results tr:first-child {
        font-weight: bold;
      }

      textarea {
        width: 100%
      }

      fieldset.problem-select {
        margin-top: 1em;
        margin-left: 1em;
      }

      div.problem-option-container.enabled {
        margin-bottom: 0.5em;
      }

      div.problem-option-container:last-child {
        margin-bottom: 0;
      }

      fieldset.assertions {
        margin-bottom: 1em;
      }

      label.assertion {
        display: block;
      }

      .required:not(.highlight-required) {
        display: none;
      }

      .required-other:not(.highlight-required) {
        display: none;
      }

      .required.highlight-required {
        color: red;
      }

      fieldset.highlight-required {
        border-color: red;
      }

      fieldset .highlight-required {
        color: red;
      }

      .off-screen {
        position: absolute !important;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px, 1px, 1px, 1px);
        white-space: nowrap;
      }
    </style>
  </head>
  <body>
    <script type="module">
      import {loadCollectedTestAsync} from "../resources/aria-at-harness.mjs";
      loadCollectedTestAsync(new URL(location + "/..").pathname, "test-26-navigate-backwards-to-a-heading-inside-a-banner-landmark-interaction-voiceover_macos.collected.json");
    </script>
  </body>
</html>
"
`;

exports[`V1 test format version creates build files for v1 test (banner) 136`] = `
"{
  "info": {
    "testId": 26,
    "task": "navigate backwards to a heading inside a banner landmark",
    "title": "Navigate backwards to a heading inside a banner landmark",
    "references": [
      {
        "refId": "example",
        "value": "https://w3c.github.io/aria-practices/examples/landmarks/banner.html"
      },
      {
        "refId": "banner",
        "value": "https://w3c.github.io/aria/#banner"
      }
    ]
  },
  "target": {
    "at": {
      "key": "voiceover_macos",
      "raw": "VOICEOVER_MACOS",
      "name": "VoiceOver for macOS"
    },
    "mode": "interaction",
    "referencePage": "reference/2021-10-24_135455/banner.setFocusAfterBanner.html",
    "setupScript": {
      "name": "setFocusAfterBanner",
      "description": "sets focus on a link after the banner landmark",
      "source": "// sets focus on a link after the banner landmark\\ntestPageDocument.getElementById('afterlink').focus();\\n",
      "modulePath": "scripts/setFocusAfterBanner.module.js",
      "jsonpPath": "scripts/setFocusAfterBanner.jsonp.js"
    }
  },
  "instructions": {
    "user": [
      "With focus on the 'Navigate backwards from here' link, navigate to the 'ARIA Landmarks Example' heading."
    ],
    "raw": "With focus on the 'Navigate backwards from here' link, navigate to the 'ARIA Landmarks Example' heading.",
    "mode": "Toggle Quick Nav OFF by pressing the Left Arrow and Right Arrow keys at the same time."
  },
  "commands": [
    {
      "id": "SHIFT_CTRL_OPT_CMD_H",
      "keystroke": "Shift+Control+Option+Command+H",
      "keypresses": [
        {
          "id": "SHIFT_CTRL_OPT_CMD_H",
          "keystroke": "Shift+Control+Option+Command+H"
        }
      ]
    }
  ],
  "assertions": [
    {
      "priority": 1,
      "expectation": "Role 'banner' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Role 'heading' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Heading level '1' is conveyed"
    },
    {
      "priority": 1,
      "expectation": "Name 'ARIA Landmarks Example' is conveyed"
    }
  ]
}"
`;

exports[`V1 test format version creates build files for v1 test (banner) 137`] = `
"
<!DOCTYPE html>
<meta charset="utf-8">
<title>Navigate backwards to a heading inside a banner landmark</title>
<link rel="help" href="https://w3c.github.io/aria-practices/examples/landmarks/banner.html">
<link rel="help" href="https://w3c.github.io/aria/#banner">

<script>
  var scripts = {
		setFocusAfterBanner: function(testPageDocument){
			// sets focus on a link after the banner landmark
			testPageDocument.getElementById('afterlink').focus();
		}
	};
</script>
<script type="module">
  import { initialize, verifyATBehavior, displayTestPageAndInstructions } from "../resources/aria-at-harness.mjs";

  new Promise((resolve) => {
    fetch('../support.json')
      .then(response => resolve(response.json()))
    })
  .then(supportJson => {
    const testJson = {
  "setup_script_description": "sets focus on a link after the banner landmark",
  "setupTestPage": "setFocusAfterBanner",
  "applies_to": [
    "voiceover_macos"
  ],
  "mode": "interaction",
  "task": "navigate backwards to a heading inside a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Navigate backwards from here' link, navigate to the 'ARIA Landmarks Example' heading.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'heading' is conveyed"
    ],
    [
      "1",
      "Heading level '1' is conveyed"
    ],
    [
      "1",
      "Name 'ARIA Landmarks Example' is conveyed"
    ]
  ]
};
    const commandJson = {
  "navigate backwards to a heading inside a banner landmark": {
    "reading": {
      "jaws": [
        [ "SHIFT_H" ],
        [ "SHIFT_ONE" ]
      ],
      "nvda": [
        [ "SHIFT_H" ],
        [ "SHIFT_ONE" ]
      ]
    },
    "interaction": {
      "voiceover_macos": [ [ "SHIFT_CTRL_OPT_CMD_H" ] ]
    }
  }
};
    initialize(supportJson, commandJson);
    verifyATBehavior(testJson);
    displayTestPageAndInstructions("reference/2021-10-24_135455/banner.setFocusAfterBanner.html");
  });
</script>
  "
`;

exports[`V1 test format version creates build files for v1 test (banner) 138`] = `
"{
  "setup_script_description": "sets focus on a link after the banner landmark",
  "setupTestPage": "setFocusAfterBanner",
  "applies_to": [
    "voiceover_macos"
  ],
  "mode": "interaction",
  "task": "navigate backwards to a heading inside a banner landmark",
  "testPlanStrings": {
    "ariaSpecsPreface": "Tested ARIA features:",
    "openExampleInstruction": "Activate the &quot;Open test page&quot; button, which opens the example to test in a new window and runs a script that",
    "commandListPreface": "Do this with each of the following commands or command sequences.",
    "commandListSettingsPreface": "If any settings are specified in parentheses, ensure the settings are active before executing the command or command sequence.",
    "settingInstructionsPreface": "To perform a task with",
    "assertionResponseQuestion": "Which statements are true about the response to"
  },
  "specific_user_instruction": "With focus on the 'Navigate backwards from here' link, navigate to the 'ARIA Landmarks Example' heading.",
  "output_assertions": [
    [
      "1",
      "Role 'banner' is conveyed"
    ],
    [
      "1",
      "Role 'heading' is conveyed"
    ],
    [
      "1",
      "Heading level '1' is conveyed"
    ],
    [
      "1",
      "Name 'ARIA Landmarks Example' is conveyed"
    ]
  ]
}"
`;
