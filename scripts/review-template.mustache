<!DOCTYPE html>
<meta charset="utf-8">
<html>
  <head>
    <title>Test plan review for pattern: {{pattern}}</title>
    <style>
      table {
        border-collapse: collapse;
        margin-bottom: 1em;
      }

      table, td, th {
        border: 1px solid black;
      }

      td {
        padding: .5em;
      }

    </style>
    <script type="module">
      import {TestWindow} from '../tests/resources/aria-at-test-window.mjs';

      function numberTests(value) {
        let testNumber = 0;
        let titleTextChanged = false;
        let buttonTextChanged = false;

        for (let result of document.querySelectorAll(value)) {
          result.style.display = 'block';

          if (titleTextChanged && buttonTextChanged) {
            testNumber += 1;

            titleTextChanged = false;
            buttonTextChanged = false;
          }

          if (result.nodeName === 'H2') {
            result.innerText = result.innerText.replace(/^Test\s\d+:/g, `Test ${testNumber + 1}:`);
            titleTextChanged = true;
          }

          if (result.nodeName === 'BUTTON') {
            result.value = `Open Test ${testNumber + 1} Page`;
            result.innerText = `Open Test ${testNumber + 1} Page`;
            buttonTextChanged = true;
          }
        }

        let reviewPageTitle = document.querySelector('h1');
        reviewPageTitle.innerText = reviewPageTitle.innerText.replace(/\(\d+\stest(s|)\)/g, `(${testNumber} test${testNumber !== 1 ? 's': ''})`);
      }

      window.filterATs = function(button) {
        const val = button.value;

        if (val === 'all') {
          for (let at of document.querySelectorAll('input')) {
            if (at.value !== 'all') {
              for (let result of document.querySelectorAll(`.${at.value}`)) {
                result.style.display = 'block';
              }
              at.checked = false;
            }
            else {
              at.checked = true;
            }
          }
          numberTests('.nvda, .jaws, .voiceover_macos');
        }
        else {
          for (let at of document.querySelectorAll('input')) {

            if (at.value === val) {
              at.checked = true;
            }
            else {
              at.checked = false;
            }

            for (let result of document.querySelectorAll(`.${at.value}`)) {
              result.style.display = 'none';
            }
          }
          numberTests(`.${val}`);
        }
      };

      var scripts = {
        {{{setupScripts}}}
      };

      window.openTestPage = function(testPageUri, testNumber, setupScriptName) {
        var openTestPageElement = document.getElementById('open-test-page-' + testNumber);

        var testWindow = new TestWindow({
          pageUri: testPageUri,
          setupScriptName,
          scripts,
          hooks: {
            windowOpened() {
              openTestPageElement.disabled = true;
            },
            windowClosed() {
              openTestPageElement.disabled = false;
            }
          }
        });
        testWindow.open();
      };
    </script>
  </head>
  <body>

    <h1>Test plan review for pattern: {{pattern}} ({{totalTests}} tests)</h1>

    <fieldset>
      <legend>Filter tests by assistive technology</legend>
      <input type="radio" onclick="filterATs(this)" id="all" value="all" checked="true"><label for="all">All assistive technologies</label>
      {{#AToptions}}
      <input type="radio" onclick="filterATs(this)" id="{{key}}" value="{{key}}"><label for="{{key}}">{{name}}</label>
      {{/AToptions}}
    </fieldset>

    {{#tests}}
    <h2 class="{{allRelevantATsSpaceSeparated}}">Test {{testNumber}}: {{{name}}}</h2>
    <p>
      <ul class="{{allRelevantATsSpaceSeparated}}">
        <li>Mode: {{mode}}</li>
        <li>Applies to: {{allRelevantATsFormatted}}</li>
        <li>Last edited: {{lastEdited}}</li>
        <li>Tests:
          <ul>
            {{#allRelevantATs}}
              <li><a href="../tests{{{location}}}?at={{{.}}}">{{{.}}}</a></li>
            {{/allRelevantATs}}
          </ul>
        </li>
        <li>Relevant Specifications:
          <ul>
            {{#helpLinks}}
              <li><a href="{{link}}">{{text}}</a></li>
            {{/helpLinks}}
          </ul>
        </li>
      </ul>

      <button id="open-test-page-{{testNumber}}" class="{{allRelevantATsSpaceSeparated}}"
        onclick="openTestPage('../tests{{reference}}', {{testNumber}}, '{{setupScriptName}}');">Open Test {{testNumber}} Page</button>
    </p>
      {{#ATTests}}
      <div class="{{atKey}}">
        <h3>{{atName}}</h3>
        {{#setupScriptDescription}}
        <h4>Scripted Instructions</h4>
        The following instructions are executed by a script in the test page to initialize the widget:
        <ol>
        <li>{{.}}</li>
        </ol>
        {{/setupScriptDescription}}
        <h4>Tester Instructions</h4>
        <p>
          <ol>
             <li>{{modeInstruction}}</li>
             <li>{{userInstruction}} using the following commands:
               <ul>
                 {{#commands}}
                   <li>{{.}}</li>
                 {{/commands}}
                 {{^commands}}
                   <li>No commands have been added for this test for {{atName}}. Add commands, or, update the "applies_to" to list only the relevant assistive technologies.</li>
                 {{/commands}}
               </ul>
             </li>
          </ol>
        </p>
        <h4>Assertions</h4>
        <table>
          <tr><th>Priority</th><th>Assertion</th></tr>
          {{#assertions}}
            <tr><td>{{priority}}</td><td>{{description}}</td></tr>
          {{/assertions}}
          {{^assertions}}
            <tr><td colspan="2">No assertions have been listed for {{atName}}. Add assertion or update the "applies_to" to list only the relevant assistive technologies.</td></tr>
          {{/assertions}}
        </table>
      </div>
      {{/ATTests}}
    {{/tests}}

  </body>
</html>
